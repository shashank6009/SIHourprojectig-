{"version":3,"sources":["turbopack:///[project]/node_modules/date-fns/parseISO.js","turbopack:///[project]/src/app/api/jobs/rollup/route.ts","turbopack:///[project]/src/jobs/metrics-rollup.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import { NextRequest, NextResponse } from 'next/server';\nimport { rollupMetricsForDay } from '@/jobs/metrics-rollup';\n\nexport async function POST(req: NextRequest) {\n  try {\n    // Validate cron key for security\n    const cronKey = req.headers.get('X-CRON-KEY');\n    const expectedKey = process.env.CRON_KEY;\n    \n    if (!expectedKey) {\n      return NextResponse.json(\n        { error: 'CRON_KEY not configured' },\n        { status: 500 }\n      );\n    }\n    \n    if (cronKey !== expectedKey) {\n      return NextResponse.json(\n        { error: 'Invalid cron key' },\n        { status: 401 }\n      );\n    }\n\n    // Get date from request body or default to yesterday\n    const body = await req.json().catch(() => ({}));\n    const targetDate = body.date;\n\n    // Roll up metrics for the specified date (or yesterday if not provided)\n    const result = await rollupMetricsForDay(targetDate);\n\n    return NextResponse.json({\n      success: true,\n      data: result,\n    });\n\n  } catch (error) {\n    console.error('Rollup job error:', error);\n    return NextResponse.json(\n      { error: 'Failed to run rollup job' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(req: NextRequest) {\n  try {\n    // Allow manual trigger for testing (with same security)\n    const cronKey = req.headers.get('X-CRON-KEY');\n    const expectedKey = process.env.CRON_KEY;\n    \n    if (!expectedKey) {\n      return NextResponse.json(\n        { error: 'CRON_KEY not configured' },\n        { status: 500 }\n      );\n    }\n    \n    if (cronKey !== expectedKey) {\n      return NextResponse.json(\n        { error: 'Invalid cron key' },\n        { status: 401 }\n      );\n    }\n\n    // Get date from query params\n    const url = new URL(req.url);\n    const targetDate = url.searchParams.get('date');\n\n    // Roll up metrics\n    const result = await rollupMetricsForDay(targetDate || undefined);\n\n    return NextResponse.json({\n      success: true,\n      data: result,\n    });\n\n  } catch (error) {\n    console.error('Rollup job error:', error);\n    return NextResponse.json(\n      { error: 'Failed to run rollup job' },\n      { status: 500 }\n    );\n  }\n}\n","import { supabaseServer } from '@/lib/supabase-server';\nimport { format, subDays, parseISO } from 'date-fns';\n\nexport interface RollupResult {\n  day: string;\n  users: number;\n  totalEvents: number;\n  avgAtsScore: number;\n  exportConversion: number;\n}\n\n/**\n * Roll up daily metrics from raw events\n * This function aggregates events into daily metrics for faster analytics queries\n */\nexport async function rollupMetricsForDay(dayISO?: string): Promise<RollupResult> {\n  try {\n    const targetDay = dayISO ? parseISO(dayISO) : subDays(new Date(), 1);\n    const dayStr = format(targetDay, 'yyyy-MM-dd');\n    const startOfDay = `${dayStr}T00:00:00.000Z`;\n    const endOfDay = `${dayStr}T23:59:59.999Z`;\n\n    console.log(`Rolling up metrics for ${dayStr}`);\n\n    // Get all events for the day\n    const { data: events, error: eventsError } = await supabaseServer\n      .from('resume_events')\n      .select('*')\n      .gte('created_at', startOfDay)\n      .lte('created_at', endOfDay);\n\n    if (eventsError) {\n      throw new Error(`Failed to fetch events: ${eventsError.message}`);\n    }\n\n    if (!events || events.length === 0) {\n      console.log(`No events found for ${dayStr}`);\n      return {\n        day: dayStr,\n        users: 0,\n        totalEvents: 0,\n        avgAtsScore: 0,\n        exportConversion: 0,\n      };\n    }\n\n    // Group events by user\n    const userEvents = events.reduce((acc, event) => {\n      if (!acc[event.user_hash]) {\n        acc[event.user_hash] = [];\n      }\n      acc[event.user_hash].push(event);\n      return acc;\n    }, {} as Record<string, any[]>);\n\n    const userIds = Object.keys(userEvents);\n    const totalEvents = events.length;\n\n    // Calculate metrics per user\n    const userMetrics = userIds.map(userHash => {\n      const userEventList = userEvents[userHash];\n      \n      // Count different event types\n      const eventTypes = userEventList.reduce((acc, event) => {\n        acc[event.event_type] = (acc[event.event_type] || 0) + 1;\n        return acc;\n      }, {} as Record<string, number>);\n\n      // Calculate ATS scores from events\n      const atsScores = userEventList\n        .filter(event => event.metadata?.atsScore)\n        .map(event => event.metadata.atsScore);\n\n      const avgAtsScore = atsScores.length > 0 \n        ? atsScores.reduce((sum, score) => sum + score, 0) / atsScores.length \n        : null;\n\n      // Calculate export conversion (exports / interview completions)\n      const interviewCompletions = eventTypes.INTERVIEW_COMPLETED || 0;\n      const pdfExports = eventTypes.PDF_EXPORTED || 0;\n      const exportConversion = interviewCompletions > 0 ? pdfExports / interviewCompletions : 0;\n\n      return {\n        user_hash: userHash,\n        resumes_created: eventTypes.INTERVIEW_COMPLETED || 0,\n        versions_created: (eventTypes.INTERVIEW_COMPLETED || 0) + (eventTypes.JD_ALIGNED || 0),\n        avg_ats_score: avgAtsScore,\n        export_conversion: exportConversion,\n        mentor_accept_rate: 0, // TODO: Calculate from mentor approval events\n      };\n    });\n\n    // Calculate global averages\n    const validAtsScores = userMetrics\n      .map(m => m.avg_ats_score)\n      .filter(score => score !== null) as number[];\n\n    const globalAvgAts = validAtsScores.length > 0\n      ? validAtsScores.reduce((sum, score) => sum + score, 0) / validAtsScores.length\n      : 0;\n\n    const globalExportConversion = userMetrics.length > 0\n      ? userMetrics.reduce((sum, m) => sum + m.export_conversion, 0) / userMetrics.length\n      : 0;\n\n    // Upsert metrics for each user\n    for (const userMetric of userMetrics) {\n      const { error: upsertError } = await supabaseServer\n        .from('resume_metrics_daily')\n        .upsert({\n          day: dayStr,\n          user_hash: userMetric.user_hash,\n          resumes_created: userMetric.resumes_created,\n          versions_created: userMetric.versions_created,\n          avg_ats_score: userMetric.avg_ats_score,\n          export_conversion: userMetric.export_conversion,\n          mentor_accept_rate: userMetric.mentor_accept_rate,\n        }, {\n          onConflict: 'day,user_hash'\n        });\n\n      if (upsertError) {\n        console.error(`Failed to upsert metrics for user ${userMetric.user_hash}:`, upsertError);\n      }\n    }\n\n    // Also create a global aggregate (user_hash = null)\n    const { error: globalUpsertError } = await supabaseServer\n      .from('resume_metrics_daily')\n      .upsert({\n        day: dayStr,\n        user_hash: null,\n        resumes_created: userMetrics.reduce((sum, m) => sum + m.resumes_created, 0),\n        versions_created: userMetrics.reduce((sum, m) => sum + m.versions_created, 0),\n        avg_ats_score: globalAvgAts,\n        export_conversion: globalExportConversion,\n        mentor_accept_rate: 0,\n      }, {\n        onConflict: 'day,user_hash'\n      });\n\n    if (globalUpsertError) {\n      console.error('Failed to upsert global metrics:', globalUpsertError);\n    }\n\n    console.log(`Rollup completed for ${dayStr}: ${userIds.length} users, ${totalEvents} events`);\n\n    return {\n      day: dayStr,\n      users: userIds.length,\n      totalEvents,\n      avgAtsScore: globalAvgAts,\n      exportConversion: globalExportConversion,\n    };\n\n  } catch (error) {\n    console.error('Metrics rollup error:', error);\n    throw error;\n  }\n}\n\n/**\n * Roll up metrics for multiple days\n */\nexport async function rollupMetricsForDateRange(startDate: string, endDate: string): Promise<RollupResult[]> {\n  const results: RollupResult[] = [];\n  const start = parseISO(startDate);\n  const end = parseISO(endDate);\n  \n  let current = start;\n  while (current <= end) {\n    try {\n      const result = await rollupMetricsForDay(format(current, 'yyyy-MM-dd'));\n      results.push(result);\n    } catch (error) {\n      console.error(`Failed to rollup metrics for ${format(current, 'yyyy-MM-dd')}:`, error);\n    }\n    current = new Date(current.getTime() + 24 * 60 * 60 * 1000); // Add 1 day\n  }\n  \n  return results;\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/jobs/rollup/route\",\n        pathname: \"/api/jobs/rollup\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/jobs/rollup/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/jobs/rollup/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[0,3]}