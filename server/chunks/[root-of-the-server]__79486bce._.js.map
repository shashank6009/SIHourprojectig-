{"version":3,"sources":["turbopack:///[project]/src/lib/pdf/normalize.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-runtime.ts","turbopack:///[project]/src/lib/pdf/templates/base.tsx","turbopack:///[project]/src/lib/pdf/templates/classic.tsx","turbopack:///[project]/src/lib/pdf/templates/compact.tsx","turbopack:///[project]/src/lib/pdf/templates/modern.tsx","turbopack:///[project]/src/lib/pdf/render.ts","turbopack:///[project]/src/lib/prompts/outreach.ts","turbopack:///[project]/src/lib/pdf/templates/cover.tsx","turbopack:///[project]/src/lib/batch/runner.ts","turbopack:///[project]/src/app/api/batch/run/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { InterviewResponse } from '@/types/resume';\n\nexport interface NormalizedPdfModel {\n  header: {\n    name?: string;\n    role?: string;\n    contactLines: string[];\n  };\n  sections: Array<{\n    title: string;\n    bullets: string[];\n    period?: string;\n    subtitle?: string;\n  }>;\n}\n\nexport function normalizeForPdf(input: InterviewResponse & {\n  fullName?: string;\n  contact?: {\n    email?: string;\n    phone?: string;\n    links?: string[];\n  };\n  targetRole?: string;\n}): NormalizedPdfModel {\n  // Build header\n  const contactLines: string[] = [];\n  if (input.contact?.email) contactLines.push(input.contact.email);\n  if (input.contact?.phone) contactLines.push(input.contact.phone);\n  if (input.contact?.links) contactLines.push(...input.contact.links);\n\n  const header = {\n    name: input.fullName || 'Your Name',\n    role: input.targetRole || 'Professional',\n    contactLines,\n  };\n\n  // Process blocks into sections\n  const sections: NormalizedPdfModel['sections'] = [];\n  const seenBullets = new Set<string>();\n\n  // Define section order and mapping\n  const sectionOrder = ['education', 'project', 'experience', 'volunteer', 'skill'];\n  const sectionTitles = {\n    education: 'EDUCATION',\n    project: 'PROJECTS',\n    experience: 'EXPERIENCE',\n    volunteer: 'VOLUNTEER WORK',\n    skill: 'SKILLS',\n  };\n\n  // Group blocks by type\n  const blocksByType = input.blocks.reduce((acc, block) => {\n    if (!acc[block.type]) acc[block.type] = [];\n    acc[block.type].push(block);\n    return acc;\n  }, {} as Record<string, typeof input.blocks>);\n\n  // Process each section type in order\n  sectionOrder.forEach(type => {\n    const blocks = blocksByType[type] || [];\n    if (blocks.length === 0) return;\n\n    const sectionBullets: string[] = [];\n    \n    blocks.forEach(block => {\n      // Use tailored content if available, otherwise use original details\n      const bullets = input.tailoredContent?.rewrittenBlocks?.find(\n        rb => rb.id === block.id\n      )?.bullets || block.details;\n\n      bullets.forEach(bullet => {\n        // Clean and normalize bullet\n        const cleanBullet = cleanBulletText(bullet);\n        if (cleanBullet && !seenBullets.has(cleanBullet)) {\n          seenBullets.add(cleanBullet);\n          sectionBullets.push(cleanBullet);\n        }\n      });\n    });\n\n    if (sectionBullets.length > 0) {\n      // Limit bullets per section (max 6)\n      const limitedBullets = sectionBullets.slice(0, 6);\n      if (sectionBullets.length > 6) {\n        limitedBullets.push('+ more available on request');\n      }\n\n      sections.push({\n        title: sectionTitles[type as keyof typeof sectionTitles],\n        bullets: limitedBullets,\n      });\n    }\n  });\n\n  return { header, sections };\n}\n\nfunction cleanBulletText(text: string): string {\n  if (!text) return '';\n  \n  // Remove emails and phone numbers from bullets (keep in header only)\n  let cleaned = text\n    .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '[email]')\n    .replace(/\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b/g, '[phone]')\n    .replace(/\\b\\(\\d{3}\\)\\s*\\d{3}[-.]?\\d{4}\\b/g, '[phone]');\n\n  // Replace fancy symbols with plain bullet\n  cleaned = cleaned\n    .replace(/[•▪▫‣⁃]/g, '•')\n    .replace(/[–—]/g, '-')\n    .replace(/[\"\"]/g, '\"')\n    .replace(/['']/g, \"'\");\n\n  // Hard wrap at ~90-95 characters\n  if (cleaned.length > 95) {\n    const words = cleaned.split(' ');\n    let lines: string[] = [];\n    let currentLine = '';\n    \n    words.forEach(word => {\n      if ((currentLine + ' ' + word).length > 90) {\n        if (currentLine) lines.push(currentLine);\n        currentLine = word;\n      } else {\n        currentLine = currentLine ? currentLine + ' ' + word : word;\n      }\n    });\n    \n    if (currentLine) lines.push(currentLine);\n    cleaned = lines.join('\\n');\n  }\n\n  return cleaned.trim();\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxRuntime\n","import React from 'react';\nimport { StyleSheet, Font } from '@react-pdf/renderer';\n\n// Register fonts (fallback to system fonts if custom fonts unavailable)\nFont.register({\n  family: 'Helvetica',\n  src: 'https://fonts.gstatic.com/s/helvetica/v1/helvetica.ttf',\n});\n\nFont.register({\n  family: 'Helvetica-Bold',\n  src: 'https://fonts.gstatic.com/s/helvetica/v1/helvetica-bold.ttf',\n});\n\n// Base styles for ATS-safe PDF generation\nexport const baseStyles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#FFFFFF',\n    padding: 72, // 1\" margins\n    fontFamily: 'Helvetica',\n    fontSize: 11,\n    lineHeight: 1.25,\n    color: '#000000',\n  },\n  header: {\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  name: {\n    fontSize: 18,\n    fontFamily: 'Helvetica-Bold',\n    marginBottom: 4,\n    color: '#000000',\n  },\n  role: {\n    fontSize: 12,\n    fontFamily: 'Helvetica',\n    marginBottom: 8,\n    color: '#333333',\n  },\n  contact: {\n    fontSize: 10,\n    fontFamily: 'Helvetica',\n    color: '#666666',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  contactItem: {\n    marginHorizontal: 8,\n  },\n  section: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 10,\n    fontFamily: 'Helvetica-Bold',\n    marginBottom: 6,\n    color: '#000000',\n    textTransform: 'uppercase',\n    letterSpacing: 0.5,\n  },\n  bulletList: {\n    marginLeft: 0,\n  },\n  bulletItem: {\n    fontSize: 10,\n    fontFamily: 'Helvetica',\n    marginBottom: 3,\n    lineHeight: 1.2,\n    color: '#000000',\n  },\n  bullet: {\n    marginRight: 4,\n  },\n  period: {\n    fontSize: 9,\n    fontFamily: 'Helvetica',\n    color: '#666666',\n    fontStyle: 'italic',\n    marginBottom: 2,\n  },\n  subtitle: {\n    fontSize: 10,\n    fontFamily: 'Helvetica-Bold',\n    color: '#333333',\n    marginBottom: 3,\n  },\n});\n\n// Helper function to render contact information\nexport function renderContact(contactLines: string[]) {\n  if (contactLines.length === 0) return null;\n  \n  return (\n    <div style={baseStyles.contact}>\n      {contactLines.map((line, index) => (\n        <span key={index} style={baseStyles.contactItem}>\n          {line}\n        </span>\n      ))}\n    </div>\n  );\n}\n\n// Helper function to render bullet points\nexport function renderBullets(bullets: string[]) {\n  return (\n    <div style={baseStyles.bulletList}>\n      {bullets.map((bullet, index) => (\n        <div key={index} style={baseStyles.bulletItem}>\n          <span style={baseStyles.bullet}>•</span>\n          {bullet.split('\\n').map((line, lineIndex) => (\n            <span key={lineIndex}>\n              {lineIndex > 0 && '\\n'}\n              {line}\n            </span>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n// Helper function to render section\nexport function renderSection(\n  title: string,\n  bullets: string[],\n  period?: string,\n  subtitle?: string\n) {\n  return (\n    <div style={baseStyles.section}>\n      <div style={baseStyles.sectionTitle}>{title}</div>\n      {period && <div style={baseStyles.period}>{period}</div>}\n      {subtitle && <div style={baseStyles.subtitle}>{subtitle}</div>}\n      {renderBullets(bullets)}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nimport { baseStyles, renderContact, renderSection } from './base';\nimport { NormalizedPdfModel } from '../normalize';\nimport { PdfOptions } from '@/types/resume';\n\nexport function TemplateClassic({ \n  model, \n  options \n}: { \n  model: NormalizedPdfModel; \n  options: PdfOptions;\n}) {\n  const fontSize = options.fontSize || 11;\n  const lineHeight = options.lineHeight || 1.25;\n  const includeContact = options.includeContact !== false;\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={[baseStyles.page, { fontSize, lineHeight }]}>\n        {/* Header */}\n        <View style={baseStyles.header}>\n          <Text style={baseStyles.name}>{model.header.name}</Text>\n          <Text style={baseStyles.role}>{model.header.role}</Text>\n          {includeContact && renderContact(model.header.contactLines)}\n        </View>\n\n        {/* Sections */}\n        {model.sections.map((section, index) => (\n          <View key={index}>\n            {renderSection(section.title, section.bullets, section.period, section.subtitle)}\n          </View>\n        ))}\n      </Page>\n    </Document>\n  );\n}\n","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport { baseStyles, renderContact, renderSection } from './base';\nimport { NormalizedPdfModel } from '../normalize';\nimport { PdfOptions } from '@/types/resume';\n\nconst compactStyles = StyleSheet.create({\n  page: {\n    ...baseStyles.page,\n    padding: 60, // Tighter margins\n  },\n  header: {\n    ...baseStyles.header,\n    marginBottom: 16,\n  },\n  name: {\n    ...baseStyles.name,\n    fontSize: 16,\n  },\n  role: {\n    ...baseStyles.role,\n    fontSize: 11,\n  },\n  contact: {\n    ...baseStyles.contact,\n    fontSize: 9,\n  },\n  section: {\n    ...baseStyles.section,\n    marginBottom: 12,\n  },\n  sectionTitle: {\n    ...baseStyles.sectionTitle,\n    fontSize: 9,\n    marginBottom: 4,\n  },\n  bulletItem: {\n    ...baseStyles.bulletItem,\n    fontSize: 9,\n    marginBottom: 2,\n  },\n  period: {\n    ...baseStyles.period,\n    fontSize: 8,\n  },\n  subtitle: {\n    ...baseStyles.subtitle,\n    fontSize: 9,\n  },\n});\n\nexport function TemplateCompact({ \n  model, \n  options \n}: { \n  model: NormalizedPdfModel; \n  options: PdfOptions;\n}) {\n  const fontSize = options.fontSize || 10.5;\n  const lineHeight = options.lineHeight || 1.2;\n  const includeContact = options.includeContact !== false;\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={[compactStyles.page, { fontSize, lineHeight }]}>\n        {/* Header */}\n        <View style={compactStyles.header}>\n          <Text style={compactStyles.name}>{model.header.name}</Text>\n          <Text style={compactStyles.role}>{model.header.role}</Text>\n          {includeContact && (\n            <View style={compactStyles.contact}>\n              {model.header.contactLines.map((line, index) => (\n                <Text key={index} style={{ marginHorizontal: 6 }}>\n                  {line}\n                </Text>\n              ))}\n            </View>\n          )}\n        </View>\n\n        {/* Sections */}\n        {model.sections.map((section, index) => (\n          <View key={index}>\n            <View style={compactStyles.section}>\n              <Text style={compactStyles.sectionTitle}>{section.title}</Text>\n              {section.period && <Text style={compactStyles.period}>{section.period}</Text>}\n              {section.subtitle && <Text style={compactStyles.subtitle}>{section.subtitle}</Text>}\n              <View style={baseStyles.bulletList}>\n                {section.bullets.map((bullet, bulletIndex) => (\n                  <Text key={bulletIndex} style={compactStyles.bulletItem}>\n                    • {bullet}\n                  </Text>\n                ))}\n              </View>\n            </View>\n          </View>\n        ))}\n      </Page>\n    </Document>\n  );\n}\n","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport { baseStyles, renderContact, renderSection } from './base';\nimport { NormalizedPdfModel } from '../normalize';\nimport { PdfOptions } from '@/types/resume';\n\nconst modernStyles = StyleSheet.create({\n  page: {\n    ...baseStyles.page,\n    padding: 72,\n  },\n  header: {\n    ...baseStyles.header,\n    marginBottom: 24,\n    borderBottomWidth: 1,\n    borderBottomColor: '#E5E5E5',\n    paddingBottom: 16,\n  },\n  name: {\n    ...baseStyles.name,\n    fontSize: 20,\n    marginBottom: 6,\n  },\n  role: {\n    ...baseStyles.role,\n    fontSize: 13,\n    marginBottom: 10,\n  },\n  contact: {\n    ...baseStyles.contact,\n    fontSize: 10,\n  },\n  section: {\n    ...baseStyles.section,\n    marginBottom: 18,\n  },\n  sectionTitle: {\n    ...baseStyles.sectionTitle,\n    fontSize: 11,\n    marginBottom: 8,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#CCCCCC',\n    paddingBottom: 2,\n  },\n  bulletItem: {\n    ...baseStyles.bulletItem,\n    fontSize: 10,\n    marginBottom: 4,\n  },\n  period: {\n    ...baseStyles.period,\n    fontSize: 9,\n  },\n  subtitle: {\n    ...baseStyles.subtitle,\n    fontSize: 10,\n  },\n});\n\nexport function TemplateModern({ \n  model, \n  options \n}: { \n  model: NormalizedPdfModel; \n  options: PdfOptions;\n}) {\n  const fontSize = options.fontSize || 12;\n  const lineHeight = options.lineHeight || 1.3;\n  const includeContact = options.includeContact !== false;\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={[modernStyles.page, { fontSize, lineHeight }]}>\n        {/* Header */}\n        <View style={modernStyles.header}>\n          <Text style={modernStyles.name}>{model.header.name}</Text>\n          <Text style={modernStyles.role}>{model.header.role}</Text>\n          {includeContact && (\n            <View style={modernStyles.contact}>\n              {model.header.contactLines.map((line, index) => (\n                <Text key={index} style={{ marginHorizontal: 10 }}>\n                  {line}\n                </Text>\n              ))}\n            </View>\n          )}\n        </View>\n\n        {/* Sections */}\n        {model.sections.map((section, index) => (\n          <View key={index}>\n            <View style={modernStyles.section}>\n              <Text style={modernStyles.sectionTitle}>{section.title}</Text>\n              {section.period && <Text style={modernStyles.period}>{section.period}</Text>}\n              {section.subtitle && <Text style={modernStyles.subtitle}>{section.subtitle}</Text>}\n              <View style={baseStyles.bulletList}>\n                {section.bullets.map((bullet, bulletIndex) => (\n                  <Text key={bulletIndex} style={modernStyles.bulletItem}>\n                    • {bullet}\n                  </Text>\n                ))}\n              </View>\n            </View>\n          </View>\n        ))}\n      </Page>\n    </Document>\n  );\n}\n","import React from 'react';\nimport { pdf } from '@react-pdf/renderer';\nimport { normalizeForPdf, NormalizedPdfModel } from './normalize';\nimport { InterviewResponse, PdfOptions } from '@/types/resume';\nimport { TemplateClassic } from './templates/classic';\nimport { TemplateCompact } from './templates/compact';\nimport { TemplateModern } from './templates/modern';\n\nexport async function renderPdfBuffer(args: {\n  content: InterviewResponse;\n  options: PdfOptions;\n  meta?: {\n    fullName?: string;\n    contact?: {\n      email?: string;\n      phone?: string;\n      links?: string[];\n    };\n    targetRole?: string;\n  };\n}): Promise<Uint8Array> {\n  // Normalize the content for PDF generation\n  const normalizedModel = normalizeForPdf({\n    ...args.content,\n    fullName: args.meta?.fullName,\n    contact: args.meta?.contact,\n    targetRole: args.meta?.targetRole,\n  });\n\n  // Select template component\n  let TemplateComponent;\n  switch (args.options.template) {\n    case 'compact':\n      TemplateComponent = TemplateCompact;\n      break;\n    case 'modern':\n      TemplateComponent = TemplateModern;\n      break;\n    case 'classic':\n    default:\n      TemplateComponent = TemplateClassic;\n      break;\n  }\n\n  // Render PDF\n  const pdfDoc = pdf(\n    React.createElement(TemplateComponent, { model: normalizedModel, options: args.options })\n  );\n\n  // Convert to buffer\n  const buffer = await pdfDoc.toBuffer();\n  return buffer;\n}\n","/**\n * Outreach Prompts Module\n * Contains prompts for generating cover letters and outreach messages\n */\n\nexport const SYSTEM_COVER = `You are a concise, evidence-driven cover letter generator. 1 page max. Align to JD; quantify impact; human tone; ATS-friendly (no tables/graphics). Output plain text paragraphs.`;\n\nexport function USER_COVER(args: {\n  studentBlocks: any[];\n  jdText: string;\n  company?: string;\n  role?: string;\n}): string {\n  return `\nCANDIDATE_STRENGTHS_JSON:\n${JSON.stringify(args.studentBlocks)}\n\nJOB_DESCRIPTION:\n${args.jdText}\n\nCOMPANY:${args.company || \"\"}\nROLE:${args.role || \"\"}\n\nWrite a 3–4 paragraph cover letter. Paragraph 1: hook with relevant value. Paragraph 2–3: map 2–3 achievements to JD needs with numbers. Paragraph 4: close with availability & shortlist CTA.`;\n}\n\nexport function EMAIL_TEMPLATE(args: {\n  company?: string;\n  role?: string;\n}): string {\n  return `Subject: ${args.role ? args.role + \" — \" : \"\"}Application | Impact-focused candidate\n\nHi ${args.company ? \"Recruiting Team at \" + args.company : \"Recruiting Team\"},\nI tailored my resume specifically for the ${args.role || \"role\"}. Highlights: [3 bullets aligned to JD]. Would appreciate a 15-min conversation this week to discuss fit.\nBest,\n<Name> | <Email> | <Phone> | <LinkedIn>`;\n}\n\nexport function INMAIL_TEMPLATE(args: {\n  company?: string;\n  role?: string;\n}): string {\n  return `Hi ${args.company ? args.company + \" team\" : \"there\"}, I aligned my resume to ${args.role || \"the role\"} and quantified outcomes (e.g., …%). Open to a quick chat? <short link to portfolio/resume>`;\n}\n\n/**\n * Generate a personalized cover letter using AI\n */\nexport async function generateCoverLetter(\n  studentBlocks: any[],\n  jdText: string,\n  company?: string,\n  role?: string\n): Promise<string> {\n  // This would typically call an AI service\n  // For now, return a template-based approach\n  const template = `\nDear ${company ? `${company} Hiring Team` : \"Hiring Manager\"},\n\nI am writing to express my strong interest in the ${role || \"position\"} at ${company || \"your organization\"}. Based on the job description, I believe my background aligns well with your requirements.\n\n${studentBlocks.slice(0, 2).map((block, index) => {\n  const achievement = block.details?.[0] || block.description || \"Relevant experience\";\n  return `In my experience, I have ${achievement.toLowerCase()}. This demonstrates my ability to deliver results in areas relevant to your needs.`;\n}).join('\\n\\n')}\n\nI am excited about the opportunity to contribute to ${company || \"your team\"} and would welcome the chance to discuss how my skills and experience can add value to your organization.\n\nThank you for your consideration. I look forward to hearing from you.\n\nBest regards,\n[Your Name]\n`;\n\n  return template.trim();\n}\n\n/**\n * Generate personalized email template\n */\nexport function generateEmailTemplate(\n  company?: string,\n  role?: string,\n  highlights?: string[]\n): string {\n  const defaultHighlights = [\n    \"Delivered measurable results in previous roles\",\n    \"Strong technical and analytical skills\",\n    \"Proven track record of collaboration and leadership\"\n  ];\n\n  const bulletPoints = (highlights || defaultHighlights)\n    .slice(0, 3)\n    .map(highlight => `• ${highlight}`)\n    .join('\\n');\n\n  return `Subject: ${role ? `${role} — ` : \"\"}Application | Impact-focused candidate\n\nHi ${company ? `Recruiting Team at ${company}` : \"Recruiting Team\"},\n\nI tailored my resume specifically for the ${role || \"role\"}. Highlights:\n${bulletPoints}\n\nWould appreciate a 15-min conversation this week to discuss fit.\n\nBest,\n<Name> | <Email> | <Phone> | <LinkedIn>`;\n}\n\n/**\n * Generate personalized LinkedIn InMail template\n */\nexport function generateInMailTemplate(\n  company?: string,\n  role?: string,\n  quantifiedOutcome?: string\n): string {\n  const outcome = quantifiedOutcome || \"improved efficiency by 25%\";\n  \n  return `Hi ${company ? `${company} team` : \"there\"}, \n\nI aligned my resume to ${role || \"the role\"} and quantified outcomes (e.g., ${outcome}). Open to a quick chat? \n\n<short link to portfolio/resume>`;\n}\n","import React from 'react';\nimport { Document, Page, Text, StyleSheet, Font } from '@react-pdf/renderer';\n\n// Register fonts (fallback to system fonts if custom fonts unavailable)\nFont.register({\n  family: 'Helvetica',\n  src: 'https://fonts.gstatic.com/s/helvetica/v1/helvetica.ttf',\n});\n\nFont.register({\n  family: 'Helvetica-Bold',\n  src: 'https://fonts.gstatic.com/s/helvetica/v1/helvetica-bold.ttf',\n});\n\n// Styles for cover letter PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#FFFFFF',\n    padding: 72, // 1\" margins\n    fontFamily: 'Helvetica',\n    fontSize: 11,\n    lineHeight: 1.4,\n    color: '#000000',\n  },\n  header: {\n    marginBottom: 20,\n  },\n  date: {\n    fontSize: 10,\n    fontFamily: 'Helvetica',\n    color: '#666666',\n    marginBottom: 20,\n    textAlign: 'right',\n  },\n  recipient: {\n    fontSize: 11,\n    fontFamily: 'Helvetica',\n    color: '#000000',\n    marginBottom: 20,\n  },\n  greeting: {\n    fontSize: 11,\n    fontFamily: 'Helvetica',\n    color: '#000000',\n    marginBottom: 15,\n  },\n  paragraph: {\n    fontSize: 11,\n    fontFamily: 'Helvetica',\n    color: '#000000',\n    marginBottom: 15,\n    lineHeight: 1.4,\n    textAlign: 'justify',\n  },\n  closing: {\n    fontSize: 11,\n    fontFamily: 'Helvetica',\n    color: '#000000',\n    marginTop: 20,\n    marginBottom: 5,\n  },\n  signature: {\n    fontSize: 11,\n    fontFamily: 'Helvetica',\n    color: '#000000',\n    marginBottom: 5,\n  },\n  contact: {\n    fontSize: 10,\n    fontFamily: 'Helvetica',\n    color: '#666666',\n  },\n});\n\ninterface CoverLetterProps {\n  text: string;\n  meta?: {\n    name?: string;\n    contact?: {\n      email?: string;\n      phone?: string;\n      linkedin?: string;\n    };\n  };\n}\n\nexport function TemplateCoverLetter({ text, meta }: CoverLetterProps) {\n  // Parse the cover letter text into paragraphs\n  const paragraphs = text\n    .split('\\n\\n')\n    .map(p => p.trim())\n    .filter(p => p.length > 0);\n\n  // Extract greeting and closing if present\n  const greeting = paragraphs.find(p => \n    p.toLowerCase().includes('dear') || \n    p.toLowerCase().includes('hi ') ||\n    p.toLowerCase().includes('hello')\n  );\n  \n  const closing = paragraphs.find(p => \n    p.toLowerCase().includes('sincerely') || \n    p.toLowerCase().includes('best regards') ||\n    p.toLowerCase().includes('thank you')\n  );\n\n  // Filter out greeting and closing from main paragraphs\n  const mainParagraphs = paragraphs.filter(p => \n    p !== greeting && p !== closing\n  );\n\n  // Get current date\n  const currentDate = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        {/* Date */}\n        <Text style={styles.date}>{currentDate}</Text>\n\n        {/* Recipient placeholder */}\n        <Text style={styles.recipient}>\n          Hiring Manager{'\\n'}\n          [Company Name]{'\\n'}\n          [Company Address]\n        </Text>\n\n        {/* Greeting */}\n        {greeting && (\n          <Text style={styles.greeting}>{greeting}</Text>\n        )}\n\n        {/* Main paragraphs */}\n        {mainParagraphs.map((paragraph, index) => (\n          <Text key={index} style={styles.paragraph}>\n            {paragraph}\n          </Text>\n        ))}\n\n        {/* Closing */}\n        {closing && (\n          <>\n            <Text style={styles.closing}>{closing}</Text>\n            <Text style={styles.signature}>\n              {meta?.name || '[Your Name]'}\n            </Text>\n            {meta?.contact && (\n              <Text style={styles.contact}>\n                {meta.contact.email && `${meta.contact.email} | `}\n                {meta.contact.phone && `${meta.contact.phone} | `}\n                {meta.contact.linkedin && meta.contact.linkedin}\n              </Text>\n            )}\n          </>\n        )}\n      </Page>\n    </Document>\n  );\n}\n\n// Alternative simple template for basic cover letters\nexport function SimpleCoverLetter({ text, meta }: CoverLetterProps) {\n  const currentDate = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <Text style={styles.date}>{currentDate}</Text>\n        \n        <Text style={styles.recipient}>\n          Hiring Manager{'\\n'}\n          [Company Name]\n        </Text>\n\n        <Text style={styles.greeting}>Dear Hiring Manager,</Text>\n\n        <Text style={styles.paragraph}>{text}</Text>\n\n        <Text style={styles.closing}>Sincerely,</Text>\n        <Text style={styles.signature}>\n          {meta?.name || '[Your Name]'}\n        </Text>\n        {meta?.contact && (\n          <Text style={styles.contact}>\n            {meta.contact.email && `${meta.contact.email} | `}\n            {meta.contact.phone && `${meta.contact.phone}`}\n          </Text>\n        )}\n      </Page>\n    </Document>\n  );\n}\n","/**\n * Batch Processing Orchestrator\n * Handles processing of resume batches with AI coaching, PDF generation, and outreach content\n */\n\nimport React from 'react';\nimport { coachAndTailor } from \"@/lib/ai\";\nimport { renderPdfBuffer } from \"@/lib/pdf/render\";\nimport { normalizeJD } from \"@/lib/jd/normalize\";\nimport { generateCoverLetter, generateEmailTemplate, generateInMailTemplate } from \"@/lib/prompts/outreach\";\nimport { TemplateCoverLetter } from \"@/lib/pdf/templates/cover\";\nimport { pdf } from '@react-pdf/renderer';\nimport { supabaseServer } from \"@/lib/supabase-server\";\nimport { trackEvent, trackModelRun } from \"@/lib/analytics\";\nimport { InterviewResponse, ResumeBlock } from \"@/types/resume\";\n\ninterface ProcessBatchItemOptions {\n  concurrency?: number;\n  maxRetries?: number;\n  retryDelay?: number;\n}\n\n/**\n * Process a single batch item\n */\nexport async function processBatchItem(itemId: string): Promise<void> {\n  try {\n    console.log(`Processing batch item: ${itemId}`);\n\n    // 1) Load batch_item + the latest InterviewResponse blocks for this user\n    const { data: item, error: itemError } = await supabaseServer\n      .from('resume_batch_items')\n      .select(`\n        *,\n        resume_batches!inner(user_id)\n      `)\n      .eq('id', itemId)\n      .single();\n\n    if (itemError || !item) {\n      throw new Error(`Failed to load batch item: ${itemError?.message}`);\n    }\n\n    const userId = item.resume_batches.user_id;\n\n    // Get the most recent resume version for this user\n    const { data: resumeVersions, error: versionError } = await supabaseServer\n      .from('resume_versions')\n      .select('*')\n      .eq('resume_id', (await getLatestResumeId(userId)))\n      .order('created_at', { ascending: false })\n      .limit(1);\n\n    if (versionError || !resumeVersions || resumeVersions.length === 0) {\n      throw new Error(`No resume versions found for user: ${versionError?.message}`);\n    }\n\n    const latestVersion = resumeVersions[0];\n    const blocks = latestVersion.content?.blocks || [];\n\n    if (blocks.length === 0) {\n      throw new Error('No resume blocks found in the latest version');\n    }\n\n    // 2) Normalize JD → {company, role, jdText, keywords}\n    const normalizedJD = await normalizeJD({\n      url: item.jd_url,\n      text: item.jd_text,\n    });\n\n    // Update item with normalized data\n    await supabaseServer\n      .from('resume_batch_items')\n      .update({\n        company: normalizedJD.company || item.company,\n        role: normalizedJD.role || item.role,\n        jd_text: normalizedJD.jdText,\n        keywords: normalizedJD.keywords,\n        status: 'processing',\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', itemId);\n\n    // 3) coachAndTailor(blocks, jd) → rewrittenBlocks, atsScore, gapSuggestions\n    const coachingResult = await coachAndTailor({\n      blocks: blocks as ResumeBlock[],\n      jd: {\n        text: normalizedJD.jdText,\n        keywords: normalizedJD.keywords,\n      },\n    });\n\n    // 4) Create new ResumeVersion labeled `Tailored for <company|role>`\n    const tailoredVersion = {\n      resume_id: latestVersion.resume_id,\n      label: `Tailored for ${normalizedJD.company || normalizedJD.role || 'Position'}`,\n      content: {\n        blocks: coachingResult.rewrittenBlocks.map(block => ({\n          id: block.id,\n          type: 'experience' as const,\n          title: 'Tailored Experience',\n          details: block.bullets,\n        })),\n        rationale: `Tailored for ${normalizedJD.company || normalizedJD.role || 'position'} based on job requirements`,\n        tailoredContent: {\n          rewrittenBlocks: coachingResult.rewrittenBlocks,\n          atsScore: coachingResult.atsScore,\n          gapSuggestions: coachingResult.gapSuggestions,\n          jdKeywords: normalizedJD.keywords,\n          jdText: normalizedJD.jdText,\n        },\n      } as InterviewResponse,\n      ats_score: coachingResult.atsScore,\n      created_at: new Date().toISOString(),\n    };\n\n    const { data: newVersion, error: versionCreateError } = await supabaseServer\n      .from('resume_versions')\n      .insert(tailoredVersion)\n      .select()\n      .single();\n\n    if (versionCreateError || !newVersion) {\n      throw new Error(`Failed to create tailored version: ${versionCreateError?.message}`);\n    }\n\n    // 5) Generate cover letter text via AI\n    const coverLetterText = await generateCoverLetter(\n      blocks,\n      normalizedJD.jdText,\n      normalizedJD.company,\n      normalizedJD.role\n    );\n\n    // Track model run for cover letter generation\n    await trackModelRun({\n      userId,\n      resumeVersionId: newVersion.id,\n      provider: 'openai', // TODO: Get from AI config\n      model: 'gpt-4o-mini', // TODO: Get from AI config\n      promptKey: `SYSTEM_COVER@${new Date().toISOString().split('T')[0]}`,\n      atsScore: coachingResult.atsScore,\n    });\n\n    // 6) Render PDFs\n    // a) Resume PDF using chosen template (\"classic\" default)\n    const resumePdfBuffer = await renderPdfBuffer({\n      content: newVersion.content,\n      options: { template: 'classic' },\n      meta: {\n        fullName: 'Your Name', // TODO: Get from user profile\n        targetRole: normalizedJD.role,\n      },\n    });\n\n    // b) Cover letter → new minimal PDF template\n    const coverPdfDoc = pdf(\n      React.createElement(TemplateCoverLetter, {\n        text: coverLetterText,\n        meta: {\n          name: 'Your Name', // TODO: Get from user profile\n          contact: {\n            email: 'your.email@example.com',\n            phone: '+1 (555) 123-4567',\n          },\n        },\n      })\n    );\n    const coverPdfBuffer = await coverPdfDoc.toBuffer();\n\n    // 7) Store PDFs to Supabase storage; collect signed URLs\n    const resumePdfPath = `resumes/${userId}/${itemId}/resume.pdf`;\n    const coverPdfPath = `resumes/${userId}/${itemId}/cover.pdf`;\n\n    // Upload resume PDF\n    const { error: resumeUploadError } = await supabaseServer.storage\n      .from('resumes')\n      .upload(resumePdfPath, resumePdfBuffer, {\n        contentType: 'application/pdf',\n        upsert: true,\n      });\n\n    if (resumeUploadError) {\n      throw new Error(`Failed to upload resume PDF: ${resumeUploadError.message}`);\n    }\n\n    // Upload cover letter PDF\n    const { error: coverUploadError } = await supabaseServer.storage\n      .from('resumes')\n      .upload(coverPdfPath, coverPdfBuffer, {\n        contentType: 'application/pdf',\n        upsert: true,\n      });\n\n    if (coverUploadError) {\n      throw new Error(`Failed to upload cover letter PDF: ${coverUploadError.message}`);\n    }\n\n    // Get signed URLs\n    const { data: resumeUrl } = supabaseServer.storage\n      .from('resumes')\n      .getPublicUrl(resumePdfPath);\n\n    const { data: coverUrl } = supabaseServer.storage\n      .from('resumes')\n      .getPublicUrl(coverPdfPath);\n\n    // 8) Compose outreach texts\n    const emailText = generateEmailTemplate(\n      normalizedJD.company,\n      normalizedJD.role,\n      coachingResult.rewrittenBlocks.slice(0, 3).map(block => block.bullets[0])\n    );\n\n    const inmailText = generateInMailTemplate(\n      normalizedJD.company,\n      normalizedJD.role,\n      coachingResult.rewrittenBlocks[0]?.bullets[0]\n    );\n\n    // 9) Update batch_item: status=done, ats_score, resume_version_id, assets\n    const assets = {\n      resumePdf: resumeUrl.publicUrl,\n      coverPdf: coverUrl.publicUrl,\n      emailTxt: emailText,\n      inmailTxt: inmailText,\n    };\n\n    const { error: updateError } = await supabaseServer\n      .from('resume_batch_items')\n      .update({\n        status: 'done',\n        ats_score: coachingResult.atsScore,\n        resume_version_id: newVersion.id,\n        assets,\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', itemId);\n\n    if (updateError) {\n      throw new Error(`Failed to update batch item: ${updateError.message}`);\n    }\n\n    // Track batch item completion\n    await trackEvent({\n      userId,\n      event: 'BATCH_ITEM_COMPLETED',\n      resumeVersionId: newVersion.id,\n      metadata: {\n        atsScore: coachingResult.atsScore,\n        company: normalizedJD.company,\n        role: normalizedJD.role,\n        batchId: item.batch_id,\n      },\n    });\n\n    // 10) Optional: POST to N8N_WEBHOOK_URL with item payload\n    const webhookUrl = process.env.N8N_WEBHOOK_URL;\n    if (webhookUrl) {\n      try {\n        await fetch(webhookUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            itemId,\n            company: normalizedJD.company,\n            role: normalizedJD.role,\n            atsScore: coachingResult.atsScore,\n            assets,\n            status: 'completed',\n          }),\n        });\n      } catch (webhookError) {\n        console.warn('Failed to send webhook notification:', webhookError);\n        // Don't fail the entire process for webhook errors\n      }\n    }\n\n    console.log(`Successfully processed batch item: ${itemId}`);\n  } catch (error) {\n    console.error(`Error processing batch item ${itemId}:`, error);\n\n    // Update item with error status\n    await supabaseServer\n      .from('resume_batch_items')\n      .update({\n        status: 'failed',\n        error: error instanceof Error ? error.message : 'Unknown error',\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', itemId);\n\n    throw error;\n  }\n}\n\n/**\n * Run batch processing with concurrency control\n */\nexport async function runBatch(\n  batchId: string,\n  opts: ProcessBatchItemOptions = {}\n): Promise<void> {\n  const { concurrency = 2, maxRetries = 3, retryDelay = 1000 } = opts;\n\n  try {\n    // Update batch status to running\n    await supabaseServer\n      .from('resume_batches')\n      .update({\n        status: 'running',\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', batchId);\n\n    // Get queued items\n    const { data: items, error: itemsError } = await supabaseServer\n      .from('resume_batch_items')\n      .select('id')\n      .eq('batch_id', batchId)\n      .eq('status', 'queued')\n      .order('created_at', { ascending: true });\n\n    if (itemsError || !items) {\n      throw new Error(`Failed to load batch items: ${itemsError?.message}`);\n    }\n\n    console.log(`Processing ${items.length} items in batch ${batchId} with concurrency ${concurrency}`);\n\n    // Process items with concurrency control\n    const results = await processWithConcurrency(\n      items.map(item => item.id),\n      processBatchItem,\n      concurrency,\n      maxRetries,\n      retryDelay\n    );\n\n    // Update batch statistics\n    const processed = results.filter(r => r.success).length;\n    const failed = results.filter(r => !r.success).length;\n\n    const finalStatus = failed === 0 ? 'completed' : (processed > 0 ? 'completed' : 'failed');\n\n    await supabaseServer\n      .from('resume_batches')\n      .update({\n        status: finalStatus,\n        processed,\n        failed,\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', batchId);\n\n    console.log(`Batch ${batchId} completed: ${processed} processed, ${failed} failed`);\n  } catch (error) {\n    console.error(`Error running batch ${batchId}:`, error);\n\n    // Update batch status to failed\n    await supabaseServer\n      .from('resume_batches')\n      .update({\n        status: 'failed',\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', batchId);\n\n    throw error;\n  }\n}\n\n/**\n * Helper function to get the latest resume ID for a user\n */\nasync function getLatestResumeId(userId: string): Promise<string> {\n  const { data: resumes, error } = await supabaseServer\n    .from('resumes')\n    .select('id')\n    .eq('user_id', userId)\n    .order('created_at', { ascending: false })\n    .limit(1);\n\n  if (error || !resumes || resumes.length === 0) {\n    throw new Error(`No resumes found for user: ${error?.message}`);\n  }\n\n  return resumes[0].id;\n}\n\n/**\n * Process items with concurrency control and retry logic\n */\nasync function processWithConcurrency<T>(\n  items: T[],\n  processor: (item: T) => Promise<void>,\n  concurrency: number,\n  maxRetries: number,\n  retryDelay: number\n): Promise<{ success: boolean; item: T; error?: Error }[]> {\n  const results: { success: boolean; item: T; error?: Error }[] = [];\n  const queue = [...items];\n\n  const processItem = async (item: T): Promise<void> => {\n    let lastError: Error | undefined;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        await processor(item);\n        return;\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error('Unknown error');\n        \n        if (attempt < maxRetries) {\n          console.log(`Retry ${attempt}/${maxRetries} for item:`, item);\n          await new Promise(resolve => setTimeout(resolve, retryDelay * attempt));\n        }\n      }\n    }\n    \n    throw lastError;\n  };\n\n  const workers: Promise<void>[] = [];\n  \n  for (let i = 0; i < concurrency; i++) {\n    workers.push(\n      (async () => {\n        while (queue.length > 0) {\n          const item = queue.shift();\n          if (!item) break;\n\n          try {\n            await processItem(item);\n            results.push({ success: true, item });\n          } catch (error) {\n            results.push({\n              success: false,\n              item,\n              error: error instanceof Error ? error : new Error('Unknown error'),\n            });\n          }\n        }\n      })()\n    );\n  }\n\n  await Promise.all(workers);\n  return results;\n}\n","import { NextRequest, NextResponse } from 'next/server';\nimport { supabaseServer } from '@/lib/supabase-server';\nimport { runBatch } from '@/lib/batch/runner';\nimport { z } from 'zod';\n\nconst RunBatchRequestSchema = z.object({\n  batchId: z.string().uuid(),\n  concurrency: z.number().int().min(1).max(5).optional(),\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { batchId, concurrency = 2 } = RunBatchRequestSchema.parse(body);\n\n    // Verify batch exists and belongs to user\n    const { data: batch, error: batchError } = await supabaseServer\n      .from('resume_batches')\n      .select('id, user_id, status, total')\n      .eq('id', batchId)\n      .single();\n\n    if (batchError || !batch) {\n      return NextResponse.json(\n        { error: 'Batch not found' },\n        { status: 404 }\n      );\n    }\n\n    if (batch.status !== 'created') {\n      return NextResponse.json(\n        { error: 'Batch is not in created status' },\n        { status: 400 }\n      );\n    }\n\n    if (batch.total === 0) {\n      return NextResponse.json(\n        { error: 'Batch has no items to process' },\n        { status: 400 }\n      );\n    }\n\n    // Start batch processing asynchronously\n    setImmediate(async () => {\n      try {\n        await runBatch(batchId, { concurrency });\n      } catch (error) {\n        console.error(`Error running batch ${batchId}:`, error);\n      }\n    });\n\n    return NextResponse.json({\n      started: true,\n      batchId,\n      concurrency,\n      message: 'Batch processing started',\n    });\n  } catch (error) {\n    console.error('Error in run batch:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid request data', details: error.errors },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n","import {\n  AppRouteRouteModule,\n  type AppRouteRouteHandlerContext,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\nimport { getRequestMeta } from '../../server/request-meta'\nimport { getTracer, type Span, SpanKind } from '../../server/lib/trace/tracer'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { NodeNextRequest, NodeNextResponse } from '../../server/base-http/node'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from '../../server/web/spec-extension/adapters/next-request'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { sendResponse } from '../../server/send-response'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../../server/web/utils'\nimport { getCacheControlHeader } from '../../server/lib/cache-control'\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from '../../lib/constants'\nimport { NoFallbackError } from '../../shared/lib/no-fallback-error.external'\nimport {\n  CachedRouteKind,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n} from '../../server/response-cache'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n) {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return null\n  }\n\n  const {\n    buildId,\n    params,\n    nextConfig,\n    isDraftMode,\n    prerenderManifest,\n    routerServerContext,\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated,\n    resolvedPathname,\n  } = prepareResult\n\n  const normalizedSrcPage = normalizeAppPath(srcPage)\n\n  let isIsr = Boolean(\n    prerenderManifest.dynamicRoutes[normalizedSrcPage] ||\n      prerenderManifest.routes[resolvedPathname]\n  )\n\n  if (isIsr && !isDraftMode) {\n    const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname])\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage]\n\n    if (prerenderInfo) {\n      if (prerenderInfo.fallback === false && !isPrerendered) {\n        throw new NoFallbackError()\n      }\n    }\n  }\n\n  let cacheKey: string | null = null\n\n  if (isIsr && !routeModule.isDev && !isDraftMode) {\n    cacheKey = resolvedPathname\n    // ensure /index and / is normalized to one key\n    cacheKey = cacheKey === '/index' ? '/' : cacheKey\n  }\n\n  const supportsDynamicResponse: boolean =\n    // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true ||\n    // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr\n\n  // This is a revalidation request if the request is for a static\n  // page and it is not being resumed from a postponed render and\n  // it is not a dynamic RSC request then it is a revalidation\n  // request.\n  const isRevalidate = isIsr && !supportsDynamicResponse\n\n  const method = req.method || 'GET'\n  const tracer = getTracer()\n  const activeSpan = tracer.getActiveScopeSpan()\n\n  const context: AppRouteRouteHandlerContext = {\n    params,\n    prerenderManifest,\n    renderOpts: {\n      experimental: {\n        cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n      },\n      supportsDynamicResponse,\n      incrementalCache: getRequestMeta(req, 'incrementalCache'),\n      cacheLifeProfiles: nextConfig.experimental?.cacheLife,\n      isRevalidate,\n      waitUntil: ctx.waitUntil,\n      onClose: (cb) => {\n        res.on('close', cb)\n      },\n      onAfterTaskError: undefined,\n      onInstrumentationRequestError: (error, _request, errorContext) =>\n        routeModule.onRequestError(\n          req,\n          error,\n          errorContext,\n          routerServerContext\n        ),\n    },\n    sharedContext: {\n      buildId,\n    },\n  }\n  const nodeNextReq = new NodeNextRequest(req)\n  const nodeNextRes = new NodeNextResponse(res)\n\n  const nextReq = NextRequestAdapter.fromNodeNextRequest(\n    nodeNextReq,\n    signalFromNodeResponse(res)\n  )\n\n  try {\n    const invokeRouteModule = async (span?: Span) => {\n      return routeModule.handle(nextReq, context).finally(() => {\n        if (!span) return\n\n        span.setAttributes({\n          'http.status_code': res.statusCode,\n          'next.rsc': false,\n        })\n\n        const rootSpanAttributes = tracer.getRootSpanAttributes()\n        // We were unable to get attributes, probably OTEL is not enabled\n        if (!rootSpanAttributes) {\n          return\n        }\n\n        if (\n          rootSpanAttributes.get('next.span_type') !==\n          BaseServerSpan.handleRequest\n        ) {\n          console.warn(\n            `Unexpected root span type '${rootSpanAttributes.get(\n              'next.span_type'\n            )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n          )\n          return\n        }\n\n        const route = rootSpanAttributes.get('next.route')\n        if (route) {\n          const name = `${method} ${route}`\n\n          span.setAttributes({\n            'next.route': route,\n            'http.route': route,\n            'next.span_name': name,\n          })\n          span.updateName(name)\n        } else {\n          span.updateName(`${method} ${req.url}`)\n        }\n      })\n    }\n\n    const handleResponse = async (currentSpan?: Span) => {\n      const responseGenerator: ResponseGenerator = async ({\n        previousCacheEntry,\n      }) => {\n        try {\n          if (\n            !getRequestMeta(req, 'minimalMode') &&\n            isOnDemandRevalidate &&\n            revalidateOnlyGenerated &&\n            !previousCacheEntry\n          ) {\n            res.statusCode = 404\n            // on-demand revalidate always sets this header\n            res.setHeader('x-nextjs-cache', 'REVALIDATED')\n            res.end('This page could not be found')\n            return null\n          }\n\n          const response = await invokeRouteModule(currentSpan)\n\n          ;(req as any).fetchMetrics = (context.renderOpts as any).fetchMetrics\n          let pendingWaitUntil = context.renderOpts.pendingWaitUntil\n\n          // Attempt using provided waitUntil if available\n          // if it's not we fallback to sendResponse's handling\n          if (pendingWaitUntil) {\n            if (ctx.waitUntil) {\n              ctx.waitUntil(pendingWaitUntil)\n              pendingWaitUntil = undefined\n            }\n          }\n          const cacheTags = context.renderOpts.collectedTags\n\n          // If the request is for a static response, we can cache it so long\n          // as it's not edge.\n          if (isIsr) {\n            const blob = await response.blob()\n\n            // Copy the headers from the response.\n            const headers = toNodeOutgoingHttpHeaders(response.headers)\n\n            if (cacheTags) {\n              headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n            }\n\n            if (!headers['content-type'] && blob.type) {\n              headers['content-type'] = blob.type\n            }\n\n            const revalidate =\n              typeof context.renderOpts.collectedRevalidate === 'undefined' ||\n              context.renderOpts.collectedRevalidate >= INFINITE_CACHE\n                ? false\n                : context.renderOpts.collectedRevalidate\n\n            const expire =\n              typeof context.renderOpts.collectedExpire === 'undefined' ||\n              context.renderOpts.collectedExpire >= INFINITE_CACHE\n                ? undefined\n                : context.renderOpts.collectedExpire\n\n            // Create the cache entry for the response.\n            const cacheEntry: ResponseCacheEntry = {\n              value: {\n                kind: CachedRouteKind.APP_ROUTE,\n                status: response.status,\n                body: Buffer.from(await blob.arrayBuffer()),\n                headers,\n              },\n              cacheControl: { revalidate, expire },\n            }\n\n            return cacheEntry\n          } else {\n            // send response without caching if not ISR\n            await sendResponse(\n              nodeNextReq,\n              nodeNextRes,\n              response,\n              context.renderOpts.pendingWaitUntil\n            )\n            return null\n          }\n        } catch (err) {\n          // if this is a background revalidate we need to report\n          // the request error here as it won't be bubbled\n          if (previousCacheEntry?.isStale) {\n            await routeModule.onRequestError(\n              req,\n              err,\n              {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                  isRevalidate,\n                  isOnDemandRevalidate,\n                }),\n              },\n              routerServerContext\n            )\n          }\n          throw err\n        }\n      }\n\n      const cacheEntry = await routeModule.handleResponse({\n        req,\n        nextConfig,\n        cacheKey,\n        routeKind: RouteKind.APP_ROUTE,\n        isFallback: false,\n        prerenderManifest,\n        isRoutePPREnabled: false,\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated,\n        responseGenerator,\n        waitUntil: ctx.waitUntil,\n      })\n\n      // we don't create a cacheEntry for ISR\n      if (!isIsr) {\n        return null\n      }\n\n      if (cacheEntry?.value?.kind !== CachedRouteKind.APP_ROUTE) {\n        throw new Error(\n          `Invariant: app-route received invalid cache entry ${cacheEntry?.value?.kind}`\n        )\n      }\n\n      if (!getRequestMeta(req, 'minimalMode')) {\n        res.setHeader(\n          'x-nextjs-cache',\n          isOnDemandRevalidate\n            ? 'REVALIDATED'\n            : cacheEntry.isMiss\n              ? 'MISS'\n              : cacheEntry.isStale\n                ? 'STALE'\n                : 'HIT'\n        )\n      }\n\n      // Draft mode should never be cached\n      if (isDraftMode) {\n        res.setHeader(\n          'Cache-Control',\n          'private, no-cache, no-store, max-age=0, must-revalidate'\n        )\n      }\n\n      const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers)\n\n      if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n        headers.delete(NEXT_CACHE_TAGS_HEADER)\n      }\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (\n        cacheEntry.cacheControl &&\n        !res.getHeader('Cache-Control') &&\n        !headers.get('Cache-Control')\n      ) {\n        headers.set(\n          'Cache-Control',\n          getCacheControlHeader(cacheEntry.cacheControl)\n        )\n      }\n\n      await sendResponse(\n        nodeNextReq,\n        nodeNextRes,\n        new Response(cacheEntry.value.body, {\n          headers,\n          status: cacheEntry.value.status || 200,\n        })\n      )\n      return null\n    }\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await handleResponse(activeSpan)\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          handleResponse\n        )\n      )\n    }\n  } catch (err) {\n    // if we aren't wrapped by base-server handle here\n    if (!activeSpan && !(err instanceof NoFallbackError)) {\n      await routeModule.onRequestError(req, err, {\n        routerKind: 'App Router',\n        routePath: normalizedSrcPage,\n        routeType: 'route',\n        revalidateReason: getRevalidateReason({\n          isRevalidate,\n          isOnDemandRevalidate,\n        }),\n      })\n    }\n\n    // rethrow so that we can handle serving error page\n\n    // If this is during static generation, throw the error again.\n    if (isIsr) throw err\n\n    // Otherwise, send a 500 response.\n    await sendResponse(\n      nodeNextReq,\n      nodeNextRes,\n      new Response(null, { status: 500 })\n    )\n    return null\n  }\n}\n"],"names":["module","exports","require","vendored","ReactJsxRuntime","AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","getRequestMeta","getTracer","SpanKind","normalizeAppPath","NodeNextRequest","NodeNextResponse","NextRequestAdapter","signalFromNodeResponse","BaseServerSpan","getRevalidateReason","sendResponse","fromNodeOutgoingHttpHeaders","toNodeOutgoingHttpHeaders","getCacheControlHeader","INFINITE_CACHE","NEXT_CACHE_TAGS_HEADER","NoFallbackError","CachedRouteKind","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","relativeProjectDir","__NEXT_RELATIVE_PROJECT_DIR","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks","handler","req","res","ctx","nextConfig","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","params","isDraftMode","prerenderManifest","routerServerContext","isOnDemandRevalidate","revalidateOnlyGenerated","resolvedPathname","normalizedSrcPage","isIsr","Boolean","dynamicRoutes","routes","isPrerendered","prerenderInfo","fallback","cacheKey","isDev","supportsDynamicResponse","isRevalidate","method","tracer","activeSpan","getActiveScopeSpan","context","renderOpts","experimental","cacheComponents","authInterrupts","incrementalCache","cacheLifeProfiles","cacheLife","onClose","cb","on","onAfterTaskError","undefined","onInstrumentationRequestError","error","_request","errorContext","onRequestError","sharedContext","nodeNextReq","nodeNextRes","nextReq","fromNodeNextRequest","invokeRouteModule","span","handle","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","url","handleResponse","currentSpan","cacheEntry","responseGenerator","previousCacheEntry","setHeader","response","fetchMetrics","pendingWaitUntil","cacheTags","collectedTags","blob","headers","type","revalidate","collectedRevalidate","expire","collectedExpire","value","status","body","Buffer","from","arrayBuffer","cacheControl","err","isStale","routerKind","routePath","routeType","revalidateReason","routeKind","isFallback","isRoutePPREnabled","Error","isMiss","delete","getHeader","set","Response","withPropagatedContext","trace","spanName","SERVER","attributes"],"mappings":"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","ignoreList":[1,11]}