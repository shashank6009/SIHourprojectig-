{"version":3,"sources":["turbopack:///[project]/src/lib/policy-gate.ts","turbopack:///[project]/src/lib/processing-log.ts","turbopack:///[project]/src/lib/crypto.ts","turbopack:///[project]/src/lib/consent.ts","turbopack:///[project]/src/app/api/ai/assistant/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["/**\n * Policy Gatekeeping Middleware\n * Handles consent validation, region enforcement, and data redaction\n */\n\nimport { hasConsentForScopes, ConsentScope } from './consent';\nimport { redactSensitive } from './crypto';\n\nexport type ConsentCheckResult = {\n  ok: true;\n  version: string;\n  region: string;\n} | {\n  ok: false;\n  missing: ConsentScope[];\n}\n\n/**\n * Require consent for specific scopes\n */\nexport async function requireConsent(\n  userId: string,\n  scopes: ConsentScope[]\n): Promise<ConsentCheckResult> {\n  // Development bypass for mock user\n  if (userId === '00000000-0000-0000-0000-000000000000' && process.env.NODE_ENV === 'development') {\n    return {\n      ok: true,\n      version: process.env.POLICY_VERSION || '2025-09-28',\n      region: process.env.PRIVACY_DEFAULT_REGION || 'IN',\n    };\n  }\n\n  const result = await hasConsentForScopes(userId, scopes);\n  \n  if (result.granted) {\n    // Get the latest consent details\n    const { data } = await import('./consent').then(m => \n      m.getConsentHistory(userId)\n    );\n    \n    const latestConsent = data?.[0];\n    \n    return {\n      ok: true,\n      version: latestConsent?.policy_version || process.env.POLICY_VERSION || '2025-09-28',\n      region: latestConsent?.region || process.env.PRIVACY_DEFAULT_REGION || 'IN',\n    };\n  }\n  \n  return {\n    ok: false,\n    missing: result.missing,\n  };\n}\n\n/**\n * Redact sensitive information from text for model processing\n */\nexport function redactForModel(text: string): string {\n  return redactSensitive(text);\n}\n\n/**\n * Enforce region-based restrictions on external providers\n */\nexport function enforceRegion(\n  provider: string,\n  region: string\n): \"allow\" | \"deny\" | \"route_local\" {\n  const blockExternal = process.env.PRIVACY_BLOCK_EXTERNAL_LLM === 'true';\n  \n  // Block all external LLM calls if configured\n  if (blockExternal) {\n    return \"route_local\";\n  }\n  \n  // EU region restrictions\n  if (region === 'EU') {\n    // Example: Block certain providers in EU\n    if (provider === 'openai' && !process.env.OPENAI_EU_COMPLIANT) {\n      return \"route_local\";\n    }\n  }\n  \n  // US region restrictions\n  if (region === 'US') {\n    // Example: Additional US-specific restrictions\n    if (provider === 'anthropic' && !process.env.ANTHROPIC_US_COMPLIANT) {\n      return \"route_local\";\n    }\n  }\n  \n  return \"allow\";\n}\n\n/**\n * Check if external LLM processing is allowed\n */\nexport function isExternalLLMAllowed(region: string): boolean {\n  const result = enforceRegion('openai', region);\n  return result === \"allow\";\n}\n\n/**\n * Get region-specific processing configuration\n */\nexport function getRegionConfig(region: string): {\n  allowExternalLLM: boolean;\n  requireLocalProcessing: boolean;\n  dataResidency: string;\n} {\n  const allowExternalLLM = isExternalLLMAllowed(region);\n  \n  return {\n    allowExternalLLM,\n    requireLocalProcessing: !allowExternalLLM,\n    dataResidency: region,\n  };\n}\n\n/**\n * Validate and sanitize user input for processing\n */\nexport function sanitizeInput(input: any): any {\n  if (typeof input === 'string') {\n    return redactForModel(input);\n  }\n  \n  if (Array.isArray(input)) {\n    return input.map(sanitizeInput);\n  }\n  \n  if (typeof input === 'object' && input !== null) {\n    const sanitized: any = {};\n    for (const [key, value] of Object.entries(input)) {\n      sanitized[key] = sanitizeInput(value);\n    }\n    return sanitized;\n  }\n  \n  return input;\n}\n\n/**\n * Create a privacy-safe prompt key\n */\nexport function createPrivacySafePromptKey(\n  baseKey: string,\n  region: string,\n  redacted: boolean = false\n): string {\n  const date = new Date().toISOString().split('T')[0];\n  const suffix = redacted ? '[REDACTED]' : '';\n  return `${baseKey}@${date}[${region}${suffix}]`;\n}\n\n/**\n * Log privacy-related processing decision\n */\nexport async function logPrivacyDecision(\n  userId: string,\n  decision: {\n    action: string;\n    region: string;\n    provider?: string;\n    allowed: boolean;\n    reason?: string;\n  }\n): Promise<void> {\n  const { logProcessing } = await import('./processing-log');\n  \n  await logProcessing({\n    userId,\n    action: 'PRIVACY_DECISION',\n    lawfulBasis: 'legitimate_interest',\n    metadata: {\n      decision,\n      timestamp: new Date().toISOString(),\n    },\n  });\n}\n","/**\n * Processing Log Service\n * Handles immutable logging of data processing activities\n */\n\nimport { supabaseServer } from './supabase-server';\nimport { redactSensitive } from './crypto';\n\nexport interface ProcessingLogEntry {\n  userId?: string;\n  action: string;\n  lawfulBasis?: string;\n  consentVersion?: string;\n  scopesUsed?: string[];\n  subjectId?: string;\n  metadata?: Record<string, any>;\n}\n\n/**\n * Log a processing activity\n */\nexport async function logProcessing(args: ProcessingLogEntry): Promise<void> {\n  const {\n    userId,\n    action,\n    lawfulBasis = 'consent',\n    consentVersion = process.env.POLICY_VERSION || '2025-09-28',\n    scopesUsed = [],\n    subjectId,\n    metadata = {},\n  } = args;\n\n  // Redact sensitive information from metadata\n  const redactedMetadata = redactMetadata(metadata);\n\n  const { error } = await supabaseServer\n    .from('processing_logs')\n    .insert({\n      user_id: userId,\n      action,\n      lawful_basis: lawfulBasis,\n      consent_version: consentVersion,\n      scopes_used: scopesUsed,\n      subject_id: subjectId,\n      metadata: redactedMetadata,\n    });\n\n  if (error) {\n    console.error('Failed to log processing activity:', error);\n    // Don't throw - logging failures shouldn't break user flows\n  }\n}\n\n/**\n * Redact sensitive information from metadata\n */\nfunction redactMetadata(metadata: Record<string, any>): Record<string, any> {\n  const redacted = { ...metadata };\n\n  // Redact common sensitive fields\n  const sensitiveFields = ['email', 'phone', 'address', 'name', 'text', 'content', 'body'];\n  \n  for (const [key, value] of Object.entries(redacted)) {\n    if (sensitiveFields.some(field => key.toLowerCase().includes(field))) {\n      if (typeof value === 'string') {\n        redacted[key] = redactSensitive(value);\n      } else if (typeof value === 'object' && value !== null) {\n        redacted[key] = redactMetadata(value);\n      }\n    }\n  }\n\n  return redacted;\n}\n\n/**\n * Get processing logs for a user\n */\nexport async function getUserProcessingLogs(\n  userId: string,\n  limit: number = 100\n): Promise<any[]> {\n  const { data, error } = await supabaseServer\n    .from('processing_logs')\n    .select('*')\n    .eq('user_id', userId)\n    .order('created_at', { ascending: false })\n    .limit(limit);\n\n  if (error) {\n    throw new Error(`Failed to fetch processing logs: ${error.message}`);\n  }\n\n  return data || [];\n}\n\n/**\n * Get processing logs by action type\n */\nexport async function getProcessingLogsByAction(\n  action: string,\n  limit: number = 100\n): Promise<any[]> {\n  const { data, error } = await supabaseServer\n    .from('processing_logs')\n    .select('*')\n    .eq('action', action)\n    .order('created_at', { ascending: false })\n    .limit(limit);\n\n  if (error) {\n    throw new Error(`Failed to fetch processing logs: ${error.message}`);\n  }\n\n  return data || [];\n}\n\n/**\n * Get processing statistics\n */\nexport async function getProcessingStats(\n  userId?: string,\n  days: number = 30\n): Promise<Record<string, number>> {\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n\n  let query = supabaseServer\n    .from('processing_logs')\n    .select('action')\n    .gte('created_at', startDate.toISOString());\n\n  if (userId) {\n    query = query.eq('user_id', userId);\n  }\n\n  const { data, error } = await query;\n\n  if (error) {\n    throw new Error(`Failed to fetch processing stats: ${error.message}`);\n  }\n\n  const stats: Record<string, number> = {};\n  data?.forEach(entry => {\n    stats[entry.action] = (stats[entry.action] || 0) + 1;\n  });\n\n  return stats;\n}\n","/**\n * Crypto Utilities for Envelope Encryption\n * Uses AES-256-GCM for data encryption and key wrapping\n */\n\nimport { createCipher, createDecipher, randomBytes, createHash } from 'crypto';\n\nexport interface EncryptedData {\n  dataKeyEnc: Buffer;\n  iv: Buffer;\n  tag: Buffer;\n  ciphertext: Buffer;\n}\n\n/**\n * Get master key from environment\n */\nexport function getMasterKey(): Buffer {\n  const masterKeyHex = process.env.MASTER_KEY_HEX;\n  if (!masterKeyHex) {\n    throw new Error('MASTER_KEY_HEX environment variable is required');\n  }\n  \n  if (masterKeyHex.length !== 64) {\n    throw new Error('MASTER_KEY_HEX must be 64 hex characters (32 bytes)');\n  }\n  \n  try {\n    return Buffer.from(masterKeyHex, 'hex');\n  } catch (error) {\n    throw new Error('Invalid MASTER_KEY_HEX format');\n  }\n}\n\n/**\n * Generate a random data key\n */\nfunction generateDataKey(): Buffer {\n  return randomBytes(32); // 256 bits\n}\n\n/**\n * Derive a nonce from random IV for key wrapping\n */\nfunction deriveNonce(iv: Buffer): Buffer {\n  return createHash('sha256').update(iv).digest().subarray(0, 12);\n}\n\n/**\n * Encrypt JSON data using envelope encryption\n */\nexport function encryptJSON(obj: any): EncryptedData {\n  const masterKey = getMasterKey();\n  const dataKey = generateDataKey();\n  const iv = randomBytes(16); // 128 bits for AES-GCM\n  const nonce = deriveNonce(iv);\n  \n  // Serialize data\n  const plaintext = JSON.stringify(obj);\n  \n  // Encrypt data with data key\n  const cipher = createCipher('aes-256-gcm', dataKey);\n  cipher.setAAD(iv); // Use IV as additional authenticated data\n  \n  let ciphertext = cipher.update(plaintext, 'utf8');\n  ciphertext = Buffer.concat([ciphertext, cipher.final()]);\n  const tag = cipher.getAuthTag();\n  \n  // Encrypt data key with master key\n  const keyCipher = createCipher('aes-256-gcm', masterKey);\n  keyCipher.setAAD(nonce);\n  \n  let dataKeyEnc = keyCipher.update(dataKey);\n  dataKeyEnc = Buffer.concat([dataKeyEnc, keyCipher.final()]);\n  const keyTag = keyCipher.getAuthTag();\n  \n  // Combine key tag with encrypted data key\n  dataKeyEnc = Buffer.concat([dataKeyEnc, keyTag]);\n  \n  return {\n    dataKeyEnc,\n    iv,\n    tag,\n    ciphertext,\n  };\n}\n\n/**\n * Decrypt JSON data using envelope encryption\n */\nexport function decryptJSON(parts: EncryptedData): any {\n  const masterKey = getMasterKey();\n  const { dataKeyEnc, iv, tag, ciphertext } = parts;\n  const nonce = deriveNonce(iv);\n  \n  // Extract key tag from encrypted data key\n  const keyTag = dataKeyEnc.subarray(-16); // Last 16 bytes\n  const encryptedDataKey = dataKeyEnc.subarray(0, -16);\n  \n  // Decrypt data key with master key\n  const keyDecipher = createDecipher('aes-256-gcm', masterKey);\n  keyDecipher.setAAD(nonce);\n  keyDecipher.setAuthTag(keyTag);\n  \n  let dataKey = keyDecipher.update(encryptedDataKey);\n  dataKey = Buffer.concat([dataKey, keyDecipher.final()]);\n  \n  // Decrypt data with data key\n  const decipher = createDecipher('aes-256-gcm', dataKey);\n  decipher.setAAD(iv);\n  decipher.setAuthTag(tag);\n  \n  let plaintext = decipher.update(ciphertext, undefined, 'utf8');\n  plaintext += decipher.final('utf8');\n  \n  return JSON.parse(plaintext);\n}\n\n/**\n * Convert buffer to hex string\n */\nexport function toHex(buffer: Buffer): string {\n  return buffer.toString('hex');\n}\n\n/**\n * Convert hex string to buffer\n */\nexport function fromHex(hex: string): Buffer {\n  return Buffer.from(hex, 'hex');\n}\n\n/**\n * Safely parse JSON with error handling\n */\nexport function safeParse<T>(json: string, fallback: T): T {\n  try {\n    return JSON.parse(json);\n  } catch (error) {\n    console.warn('Failed to parse JSON, using fallback:', error);\n    return fallback;\n  }\n}\n\n/**\n * Hash sensitive data for logging (one-way)\n */\nexport function hashForLogging(data: string): string {\n  return createHash('sha256').update(data).digest('hex').substring(0, 8);\n}\n\n/**\n * Redact sensitive patterns from text\n */\nexport function redactSensitive(text: string): string {\n  return text\n    .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '[EMAIL_REDACTED]')\n    .replace(/\\b(?:\\+?1[-.\\s]?)?\\(?([0-9]{3})\\)?[-.\\s]?([0-9]{3})[-.\\s]?([0-9]{4})\\b/g, '[PHONE_REDACTED]')\n    .replace(/\\b\\d{4}[-.\\s]?\\d{4}[-.\\s]?\\d{4}[-.\\s]?\\d{4}\\b/g, '[CARD_REDACTED]')\n    .replace(/\\b\\d{3}-\\d{2}-\\d{4}\\b/g, '[SSN_REDACTED]');\n}\n","/**\n * Consent Management Service\n * Handles user consent tracking and validation\n */\n\nimport { supabaseServer } from './supabase-server';\n\nexport type ConsentScope = \n  | \"LLM_PROCESSING\" \n  | \"OUTREACH_EMAIL\" \n  | \"CALENDAR_EVENTS\" \n  | \"OFFSHORE_STORAGE\" \n  | \"ANALYTICS\";\n\nexport interface ConsentResult {\n  granted: boolean;\n  version?: string;\n  region?: string;\n}\n\nexport interface ConsentRecord {\n  userId: string;\n  scopes: ConsentScope[];\n  granted: boolean;\n  region?: string;\n  policyVersion?: string;\n  ipHash?: string;\n  userAgent?: string;\n}\n\n/**\n * Check if user has granted consent for specific scopes\n */\nexport async function hasConsent(\n  userId: string,\n  scope: ConsentScope\n): Promise<ConsentResult> {\n  // Development bypass for mock user\n  if (userId === '00000000-0000-0000-0000-000000000000' && process.env.NODE_ENV === 'development') {\n    return {\n      granted: true,\n      version: POLICY_VERSION,\n      region: PRIVACY_DEFAULT_REGION,\n    };\n  }\n\n  const { data, error } = await supabaseServer\n    .from('consents')\n    .select('policy_version, region, granted')\n    .eq('user_id', userId)\n    .eq('granted', true)\n    .contains('scopes', [scope])\n    .order('created_at', { ascending: false })\n    .limit(1)\n    .single();\n\n  if (error || !data) {\n    return { granted: false };\n  }\n\n  return {\n    granted: data.granted,\n    version: data.policy_version,\n    region: data.region,\n  };\n}\n\n/**\n * Check if user has granted consent for multiple scopes\n */\nexport async function hasConsentForScopes(\n  userId: string,\n  scopes: ConsentScope[]\n): Promise<{ granted: boolean; missing: ConsentScope[] }> {\n  const results = await Promise.all(\n    scopes.map(scope => hasConsent(userId, scope))\n  );\n\n  const missing: ConsentScope[] = [];\n  let allGranted = true;\n\n  scopes.forEach((scope, index) => {\n    if (!results[index].granted) {\n      missing.push(scope);\n      allGranted = false;\n    }\n  });\n\n  return {\n    granted: allGranted,\n    missing,\n  };\n}\n\n/**\n * Record user consent\n */\nexport async function recordConsent(args: ConsentRecord): Promise<void> {\n  const {\n    userId,\n    scopes,\n    granted,\n    region = process.env.PRIVACY_DEFAULT_REGION || 'IN',\n    policyVersion = process.env.POLICY_VERSION || '2025-09-28',\n    ipHash,\n    userAgent,\n  } = args;\n\n  const { error } = await supabaseServer\n    .from('consents')\n    .insert({\n      user_id: userId,\n      policy_version: policyVersion,\n      scopes,\n      region,\n      granted,\n      ip_hash: ipHash,\n      user_agent: userAgent,\n    });\n\n  if (error) {\n    throw new Error(`Failed to record consent: ${error.message}`);\n  }\n}\n\n/**\n * Get user's consent history\n */\nexport async function getConsentHistory(userId: string): Promise<any[]> {\n  const { data, error } = await supabaseServer\n    .from('consents')\n    .select('*')\n    .eq('user_id', userId)\n    .order('created_at', { ascending: false });\n\n  if (error) {\n    throw new Error(`Failed to fetch consent history: ${error.message}`);\n  }\n\n  return data || [];\n}\n\n/**\n * Get current consent status for all scopes\n */\nexport async function getCurrentConsents(userId: string): Promise<Record<ConsentScope, ConsentResult>> {\n  const scopes: ConsentScope[] = [\n    'LLM_PROCESSING',\n    'OUTREACH_EMAIL',\n    'CALENDAR_EVENTS',\n    'OFFSHORE_STORAGE',\n    'ANALYTICS',\n  ];\n\n  const results = await Promise.all(\n    scopes.map(async (scope) => ({\n      scope,\n      result: await hasConsent(userId, scope),\n    }))\n  );\n\n  const consentMap: Record<ConsentScope, ConsentResult> = {} as any;\n  results.forEach(({ scope, result }) => {\n    consentMap[scope] = result;\n  });\n\n  return consentMap;\n}\n\n/**\n * Revoke consent for specific scopes\n */\nexport async function revokeConsent(\n  userId: string,\n  scopes: ConsentScope[],\n  ipHash?: string,\n  userAgent?: string\n): Promise<void> {\n  await recordConsent({\n    userId,\n    scopes,\n    granted: false,\n    ipHash,\n    userAgent,\n  });\n}\n","import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { requireConsent } from '@/lib/policy-gate';\nimport { logProcessing } from '@/lib/processing-log';\n\n// TODO: Phase 2 - Add proper authentication (currently using mock userId)\nconst mockUserId = '00000000-0000-0000-0000-000000000000';\n\nconst AssistantRequestSchema = z.object({\n  message: z.string().min(1),\n  currentStep: z.string(),\n  resumeData: z.any(),\n  conversationHistory: z.array(z.object({\n    id: z.string(),\n    type: z.enum(['user', 'assistant']),\n    content: z.string(),\n    timestamp: z.any(),\n  })).optional(),\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { message, currentStep, resumeData, conversationHistory = [] } = AssistantRequestSchema.parse(body);\n\n    // Check consent for LLM processing\n    const consentCheck = await requireConsent(mockUserId, ['LLM_PROCESSING']);\n    if (!consentCheck.ok) {\n      return NextResponse.json(\n        { \n          error: 'Consent required for AI processing',\n          missingConsents: consentCheck.missing \n        },\n        { status: 403 }\n      );\n    }\n\n    // Log processing activity\n    await logProcessing({\n      userId: mockUserId,\n      action: 'AI_ASSISTANT_CHAT',\n      lawfulBasis: 'consent',\n      consentVersion: consentCheck.version,\n      scopesUsed: ['LLM_PROCESSING'],\n      metadata: {\n        currentStep,\n        messageLength: message.length,\n        conversationLength: conversationHistory.length,\n        region: consentCheck.region,\n      },\n    });\n\n    // Generate AI response\n    const response = await generateAIResponse(message, currentStep, resumeData, conversationHistory);\n\n    return NextResponse.json({\n      success: true,\n      response,\n    });\n\n  } catch (error) {\n    console.error('AI Assistant error:', error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid request data', details: error.errors },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { \n        error: 'Failed to process AI request',\n        details: error instanceof Error ? error.message : 'Unknown error',\n      },\n      { status: 500 }\n    );\n  }\n}\n\nasync function generateAIResponse(\n  message: string,\n  currentStep: string,\n  resumeData: any,\n  conversationHistory: any[]\n): Promise<string> {\n  // Check if we have OpenRouter API key configured\n  const openRouterKey = process.env.OPENROUTER_API_KEY;\n  \n  if (openRouterKey) {\n    try {\n      return await callOpenRouterAPI(message, currentStep, resumeData, conversationHistory);\n    } catch (error) {\n      console.error('OpenRouter API error:', error);\n      // Fall back to local response\n    }\n  }\n\n  // Fallback to local AI responses\n  return generateLocalResponse(message, currentStep, resumeData);\n}\n\nasync function callOpenRouterAPI(\n  message: string,\n  currentStep: string,\n  resumeData: any,\n  conversationHistory: any[]\n): Promise<string> {\n  const systemPrompt = `You are a helpful resume writing assistant. You help users create outstanding resumes by providing:\n\n1. Specific, actionable advice\n2. Industry best practices\n3. Examples and templates\n4. ATS optimization tips\n5. Content enhancement suggestions\n\nCurrent step: ${currentStep}\nResume data: ${JSON.stringify(resumeData, null, 2)}\n\nBe concise, helpful, and professional. Provide specific examples when possible.`;\n\n  const messages = [\n    { role: 'system', content: systemPrompt },\n    ...conversationHistory.slice(-5).map(msg => ({\n      role: msg.type === 'user' ? 'user' : 'assistant',\n      content: msg.content\n    })),\n    { role: 'user', content: message }\n  ];\n\n  const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,\n      'Content-Type': 'application/json',\n      'HTTP-Referer': process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000',\n      'X-Title': 'Resume Builder AI Assistant',\n    },\n    body: JSON.stringify({\n      model: 'anthropic/claude-3.5-sonnet',\n      messages,\n      max_tokens: 500,\n      temperature: 0.7,\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error(`OpenRouter API error: ${response.status}`);\n  }\n\n  const data = await response.json();\n  return data.choices[0]?.message?.content || 'Sorry, I could not generate a response.';\n}\n\nfunction generateLocalResponse(message: string, currentStep: string, resumeData: any): string {\n  const lowerMessage = message.toLowerCase();\n\n  // Context-aware responses based on current step\n  if (currentStep === 'personal') {\n    if (lowerMessage.includes('email') || lowerMessage.includes('contact')) {\n      return `**Professional Email Tips:**\n\n• Use a professional email address (firstname.lastname@email.com)\n• Avoid numbers, nicknames, or unprofessional words\n• Consider creating a dedicated email for job applications\n• Make sure it's easy to read and remember\n\n**Example:** john.smith@email.com ✅\n**Avoid:** johnny123@email.com ❌`;\n    }\n    \n    if (lowerMessage.includes('linkedin') || lowerMessage.includes('social')) {\n      return `**LinkedIn Profile Tips:**\n\n• Use a professional headshot\n• Write a compelling headline\n• Include a detailed summary\n• List all relevant experience\n• Get recommendations from colleagues\n• Keep it updated and active\n\nYour LinkedIn URL should be: linkedin.com/in/yourname`;\n    }\n  }\n\n  if (currentStep === 'summary') {\n    if (lowerMessage.includes('summary') || lowerMessage.includes('about')) {\n      return `**Professional Summary Structure:**\n\n1. **Your role/position** (e.g., \"Experienced Software Engineer\")\n2. **Years of experience** (e.g., \"with 5+ years of experience\")\n3. **Key skills/expertise** (e.g., \"in full-stack development\")\n4. **What you're seeking** (e.g., \"Seeking opportunities in...\")\n\n**Example:**\n\"Experienced Software Engineer with 5+ years of expertise in full-stack development. Passionate about building scalable web applications and leading cross-functional teams. Seeking opportunities in senior development roles.\"\n\n**Tips:**\n• Keep it 2-3 sentences\n• Use action words\n• Be specific about your skills\n• Tailor to your target role`;\n    }\n  }\n\n  if (currentStep === 'experience') {\n    if (lowerMessage.includes('experience') || lowerMessage.includes('work')) {\n      return `**Experience Section Best Practices:**\n\n**For each role, include:**\n• Job title and company name\n• Employment dates\n• 2-3 key achievements with numbers\n• Technologies and tools used\n\n**Action Verbs to Use:**\n• Led, Developed, Implemented, Optimized\n• Managed, Coordinated, Collaborated\n• Designed, Built, Created, Launched\n\n**Example Achievement:**\n\"Led development of a React application that increased user engagement by 30% and reduced page load time by 50%\"\n\n**Tips:**\n• Quantify your impact with numbers\n• Focus on results, not just duties\n• Use present tense for current role, past tense for previous roles`;\n    }\n  }\n\n  if (currentStep === 'skills') {\n    if (lowerMessage.includes('skill') || lowerMessage.includes('technical')) {\n      return `**Skills Organization:**\n\n**Technical Skills:**\n• Programming languages (JavaScript, Python, Java)\n• Frameworks (React, Angular, Django)\n• Tools (Git, Docker, AWS)\n• Databases (PostgreSQL, MongoDB)\n\n**Soft Skills:**\n• Leadership, Communication, Problem-solving\n• Teamwork, Time management, Adaptability\n\n**Tips:**\n• Be specific: \"React.js\" not just \"JavaScript\"\n• Include proficiency levels if relevant\n• Focus on skills relevant to your target role\n• Group related skills together`;\n    }\n  }\n\n  if (currentStep === 'projects') {\n    if (lowerMessage.includes('project') || lowerMessage.includes('portfolio')) {\n      return `**Project Showcase Tips:**\n\n**Choose 2-3 projects that:**\n• Demonstrate your key skills\n• Are relevant to your target role\n• Show problem-solving ability\n• Have measurable outcomes\n\n**For each project:**\n• Clear, descriptive name\n• Brief description of what you built\n• Technologies and tools used\n• Link to live demo or GitHub\n\n**Example:**\n\"E-commerce Platform - Built a full-stack e-commerce solution using React, Node.js, and MongoDB. Features include user authentication, payment processing, and admin dashboard. Increased conversion rate by 25%.\"\n\n**Tips:**\n• Include screenshots or demos if possible\n• Highlight your specific contributions\n• Show the impact or results achieved`;\n    }\n  }\n\n  // General responses\n  if (lowerMessage.includes('ats') || lowerMessage.includes('optimize')) {\n    return `**ATS Optimization Tips:**\n\n• Use standard section headings (Experience, Education, Skills)\n• Include relevant keywords from job descriptions\n• Use common fonts (Arial, Times New Roman, Calibri)\n• Avoid graphics, tables, or complex formatting\n• Save as PDF for best compatibility\n• Use bullet points for easy scanning\n• Include quantifiable achievements\n\n**Keywords to Include:**\n• Job-specific technical skills\n• Industry terminology\n• Action verbs\n• Certifications and degrees`;\n  }\n\n  if (lowerMessage.includes('example') || lowerMessage.includes('template')) {\n    return `**I can provide examples for:**\n\n• Professional summaries\n• Experience descriptions\n• Project descriptions\n• Skills formatting\n• Achievement statements\n\n**Just ask me for specific examples like:**\n• \"Give me an example of a software engineer summary\"\n• \"Show me how to describe a project\"\n• \"Help me write an achievement statement\"\n\nI'll provide tailored examples based on your current step and data!`;\n  }\n\n  if (lowerMessage.includes('help') || lowerMessage.includes('stuck')) {\n    return `**I'm here to help with:**\n\n• Writing compelling content\n• Formatting and structure\n• ATS optimization\n• Industry-specific advice\n• Examples and templates\n• Answering specific questions\n\n**What would you like help with?** I can provide guidance on any part of your resume building process.`;\n  }\n\n  // Default response\n  return `I understand you're asking about \"${message}\". \n\nI'm here to help you create an outstanding resume! I can assist with:\n\n• Writing and improving content\n• Formatting and structure\n• ATS optimization\n• Industry best practices\n• Examples and templates\n\n**What specific aspect would you like help with?** Feel free to ask me anything about resume writing, and I'll provide detailed guidance.`;\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/ai/assistant/route\",\n        pathname: \"/api/ai/assistant\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/ai/assistant/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/ai/assistant/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[5]}