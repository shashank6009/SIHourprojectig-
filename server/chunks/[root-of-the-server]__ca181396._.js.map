{"version":3,"sources":["turbopack:///[project]/src/lib/jd/normalize.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/src/app/api/batch/ingest/route.ts"],"sourcesContent":["/**\n * JD Normalization Module\n * Handles URL fetching, text extraction, and keyword extraction for job descriptions\n */\n\nexport interface NormalizedJD {\n  company?: string;\n  role?: string;\n  jdText: string;\n  keywords: string[];\n}\n\n/**\n * Extract text from HTML content\n */\nfunction extractTextFromHTML(html: string): string {\n  return html\n    .replace(/<script[^>]*>.*?<\\/script>/gi, '')\n    .replace(/<style[^>]*>.*?<\\/style>/gi, '')\n    .replace(/<[^>]*>/g, ' ')\n    .replace(/\\s+/g, ' ')\n    .trim();\n}\n\n/**\n * Extract company name from HTML or text using heuristics\n */\nfunction extractCompany(html: string, text: string): string | undefined {\n  // Try to extract from title tag\n  const titleMatch = html.match(/<title[^>]*>([^<]+)<\\/title>/i);\n  if (titleMatch) {\n    const title = titleMatch[1].toLowerCase();\n    // Common patterns: \"Software Engineer at Company Name\", \"Company Name - Job Title\"\n    const atMatch = title.match(/(?:at|@)\\s*([^|\\-\\n]+)/);\n    if (atMatch) {\n      return atMatch[1].trim().replace(/[^\\w\\s]/g, '').trim();\n    }\n    \n    const dashMatch = title.match(/^([^|\\-\\n]+)\\s*[-|]/);\n    if (dashMatch) {\n      return dashMatch[1].trim().replace(/[^\\w\\s]/g, '').trim();\n    }\n  }\n\n  // Try to extract from h1 tag\n  const h1Match = html.match(/<h1[^>]*>([^<]+)<\\/h1>/i);\n  if (h1Match) {\n    const h1 = h1Match[1].toLowerCase();\n    const atMatch = h1.match(/(?:at|@)\\s*([^|\\-\\n]+)/);\n    if (atMatch) {\n      return atMatch[1].trim().replace(/[^\\w\\s]/g, '').trim();\n    }\n  }\n\n  // Try to extract from meta description\n  const metaMatch = html.match(/<meta[^>]*name=[\"']description[\"'][^>]*content=[\"']([^\"']+)[\"']/i);\n  if (metaMatch) {\n    const meta = metaMatch[1].toLowerCase();\n    const atMatch = meta.match(/(?:at|@)\\s*([^|\\-\\n]+)/);\n    if (atMatch) {\n      return atMatch[1].trim().replace(/[^\\w\\s]/g, '').trim();\n    }\n  }\n\n  // Fallback: look for common company patterns in text\n  const companyPatterns = [\n    /(?:at|@)\\s*([A-Z][a-zA-Z\\s&]+(?:Inc|Corp|LLC|Ltd|Company|Technologies|Systems|Solutions|Group|Partners)?)/i,\n    /([A-Z][a-zA-Z\\s&]+(?:Inc|Corp|LLC|Ltd|Company|Technologies|Systems|Solutions|Group|Partners)?)\\s*(?:is|seeks|looking)/i,\n  ];\n\n  for (const pattern of companyPatterns) {\n    const match = text.match(pattern);\n    if (match && match[1].length > 2 && match[1].length < 50) {\n      return match[1].trim();\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Extract role/job title from HTML or text using heuristics\n */\nfunction extractRole(html: string, text: string): string | undefined {\n  // Try to extract from title tag\n  const titleMatch = html.match(/<title[^>]*>([^<]+)<\\/title>/i);\n  if (titleMatch) {\n    const title = titleMatch[1];\n    // Common patterns: \"Software Engineer at Company\", \"Company - Software Engineer\"\n    const roleMatch = title.match(/^([^|@\\-]+?)(?:\\s*(?:at|@|\\-))/);\n    if (roleMatch) {\n      return roleMatch[1].trim();\n    }\n    \n    const dashMatch = title.match(/[^\\-\\|]+[\\-\\|]\\s*([^\\-\\|]+)/);\n    if (dashMatch) {\n      return dashMatch[1].trim();\n    }\n  }\n\n  // Try to extract from h1 tag\n  const h1Match = html.match(/<h1[^>]*>([^<]+)<\\/h1>/i);\n  if (h1Match) {\n    const h1 = h1Match[1];\n    const roleMatch = h1.match(/^([^|@\\-]+?)(?:\\s*(?:at|@|\\-))/);\n    if (roleMatch) {\n      return roleMatch[1].trim();\n    }\n  }\n\n  // Fallback: look for common job title patterns in text\n  const jobTitlePatterns = [\n    /(?:position|role|title)[:\\s]+([A-Z][a-zA-Z\\s]+(?:Engineer|Developer|Manager|Analyst|Specialist|Coordinator|Director|Lead|Senior|Junior)?)/i,\n    /(?:looking for|seeking|hiring)\\s+([A-Z][a-zA-Z\\s]+(?:Engineer|Developer|Manager|Analyst|Specialist|Coordinator|Director|Lead|Senior|Junior)?)/i,\n  ];\n\n  for (const pattern of jobTitlePatterns) {\n    const match = text.match(pattern);\n    if (match && match[1].length > 3 && match[1].length < 50) {\n      return match[1].trim();\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Extract keywords from text using simple tokenization and frequency analysis\n */\nfunction extractKeywords(text: string): string[] {\n  // Common stop words to filter out\n  const stopWords = new Set([\n    'the', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'of', 'with', 'by',\n    'a', 'an', 'as', 'is', 'was', 'are', 'were', 'be', 'been', 'being', 'have',\n    'has', 'had', 'do', 'does', 'did', 'will', 'would', 'could', 'should',\n    'this', 'that', 'these', 'those', 'i', 'you', 'he', 'she', 'it', 'we', 'they',\n    'me', 'him', 'her', 'us', 'them', 'my', 'your', 'his', 'her', 'its', 'our', 'their',\n    'can', 'may', 'must', 'shall', 'might', 'could', 'would', 'should', 'will',\n    'not', 'no', 'yes', 'all', 'any', 'some', 'many', 'much', 'few', 'little',\n    'more', 'most', 'less', 'least', 'other', 'another', 'each', 'every', 'both',\n    'either', 'neither', 'one', 'two', 'first', 'second', 'last', 'next', 'previous',\n    'new', 'old', 'good', 'bad', 'great', 'small', 'large', 'big', 'long', 'short',\n    'high', 'low', 'early', 'late', 'fast', 'slow', 'easy', 'hard', 'simple', 'complex',\n    'important', 'necessary', 'possible', 'available', 'required', 'preferred',\n    'experience', 'skills', 'ability', 'knowledge', 'understanding', 'familiarity',\n    'responsibilities', 'duties', 'tasks', 'projects', 'team', 'work', 'job', 'position',\n    'role', 'company', 'organization', 'department', 'office', 'location', 'remote',\n    'full', 'time', 'part', 'contract', 'permanent', 'temporary', 'salary', 'benefits',\n    'opportunity', 'career', 'growth', 'development', 'learning', 'training',\n    'bachelor', 'master', 'degree', 'diploma', 'certification', 'license',\n    'years', 'year', 'months', 'month', 'weeks', 'week', 'days', 'day',\n    'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday',\n    'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august',\n    'september', 'october', 'november', 'december'\n  ]);\n\n  // Tokenize and clean text\n  const words = text\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, ' ')\n    .split(/\\s+/)\n    .filter(word => \n      word.length >= 3 && \n      word.length <= 20 && \n      !stopWords.has(word) &&\n      !/^\\d+$/.test(word) // Filter out pure numbers\n    );\n\n  // Count word frequency\n  const wordCount = new Map<string, number>();\n  words.forEach(word => {\n    wordCount.set(word, (wordCount.get(word) || 0) + 1);\n  });\n\n  // Sort by frequency and return top 25 unique keywords\n  return Array.from(wordCount.entries())\n    .sort((a, b) => b[1] - a[1])\n    .slice(0, 25)\n    .map(([word]) => word);\n}\n\n/**\n * Normalize job description from URL or text\n */\nexport async function normalizeJD(input: { url?: string; text?: string }): Promise<NormalizedJD> {\n  let jdText = input.text || '';\n  let html = '';\n\n  // If URL provided, fetch and extract text\n  if (input.url && !input.text) {\n    try {\n      const response = await fetch(input.url, {\n        headers: {\n          'User-Agent': 'Mozilla/5.0 (compatible; ResumeCoPilot/1.0)',\n        },\n        // Add timeout\n        signal: AbortSignal.timeout(10000), // 10 second timeout\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch job description from URL: ${response.status}`);\n      }\n\n      html = await response.text();\n      jdText = extractTextFromHTML(html);\n\n      // Limit text length to prevent excessive processing\n      if (jdText.length > 20000) {\n        jdText = jdText.substring(0, 20000) + '... [truncated]';\n      }\n    } catch (fetchError) {\n      throw new Error(`Failed to fetch job description from URL: ${fetchError instanceof Error ? fetchError.message : 'Unknown error'}`);\n    }\n  }\n\n  if (!jdText || jdText.trim().length === 0) {\n    throw new Error('No job description text available');\n  }\n\n  // Extract company and role using heuristics\n  const company = extractCompany(html, jdText);\n  const role = extractRole(html, jdText);\n\n  // Extract keywords\n  const keywords = extractKeywords(jdText);\n\n  return {\n    company,\n    role,\n    jdText: jdText.trim(),\n    keywords,\n  };\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/batch/ingest/route\",\n        pathname: \"/api/batch/ingest\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/batch/ingest/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/batch/ingest/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest, NextResponse } from 'next/server';\nimport { supabaseServer } from '@/lib/supabase-server';\nimport { normalizeJD } from '@/lib/jd/normalize';\nimport { z } from 'zod';\n\nconst IngestBatchRequestSchema = z.object({\n  batchId: z.string().uuid(),\n  items: z.array(z.object({\n    url: z.string().url().optional(),\n    text: z.string().optional(),\n    company: z.string().optional(),\n    role: z.string().optional(),\n  })).min(1).max(parseInt(process.env.BATCH_MAX_ITEMS || '25')),\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { batchId, items } = IngestBatchRequestSchema.parse(body);\n\n    // Verify batch exists and belongs to user\n    const { data: batch, error: batchError } = await supabaseServer\n      .from('resume_batches')\n      .select('id, user_id, status')\n      .eq('id', batchId)\n      .single();\n\n    if (batchError || !batch) {\n      return NextResponse.json(\n        { error: 'Batch not found' },\n        { status: 404 }\n      );\n    }\n\n    if (batch.status !== 'created') {\n      return NextResponse.json(\n        { error: 'Batch is not in created status' },\n        { status: 400 }\n      );\n    }\n\n    // Deduplicate items by URL\n    const uniqueItems = items.filter((item, index, self) => \n      !item.url || self.findIndex(i => i.url === item.url) === index\n    );\n\n    const batchItems = [];\n    const errors = [];\n\n    // Process each item\n    for (const item of uniqueItems) {\n      try {\n        // Normalize JD if URL provided\n        let normalizedData = {\n          company: item.company,\n          role: item.role,\n          jdText: item.text,\n          keywords: [] as string[],\n        };\n\n        if (item.url && !item.text) {\n          try {\n            const normalized = await normalizeJD({ url: item.url });\n            normalizedData = {\n              company: normalized.company || item.company,\n              role: normalized.role || item.role,\n              jdText: normalized.jdText,\n              keywords: normalized.keywords,\n            };\n          } catch (normalizeError) {\n            errors.push({\n              item: item,\n              error: `Failed to normalize JD: ${normalizeError instanceof Error ? normalizeError.message : 'Unknown error'}`,\n            });\n            continue;\n          }\n        } else if (item.text) {\n          // Extract keywords from provided text\n          const normalized = await normalizeJD({ text: item.text });\n          normalizedData.keywords = normalized.keywords;\n        }\n\n        batchItems.push({\n          batch_id: batchId,\n          company: normalizedData.company,\n          role: normalizedData.role,\n          jd_url: item.url,\n          jd_text: normalizedData.jdText,\n          keywords: normalizedData.keywords,\n          status: 'queued',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n        });\n      } catch (itemError) {\n        errors.push({\n          item: item,\n          error: `Failed to process item: ${itemError instanceof Error ? itemError.message : 'Unknown error'}`,\n        });\n      }\n    }\n\n    // Insert batch items\n    if (batchItems.length > 0) {\n      const { error: insertError } = await supabaseServer\n        .from('resume_batch_items')\n        .insert(batchItems);\n\n      if (insertError) {\n        console.error('Error inserting batch items:', insertError);\n        return NextResponse.json(\n          { error: 'Failed to insert batch items' },\n          { status: 500 }\n        );\n      }\n    }\n\n    // Update batch total count\n    const { error: updateError } = await supabaseServer\n      .from('resume_batches')\n      .update({\n        total: batchItems.length,\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', batchId);\n\n    if (updateError) {\n      console.error('Error updating batch total:', updateError);\n    }\n\n    return NextResponse.json({\n      success: true,\n      totalItems: batchItems.length,\n      errors: errors.length > 0 ? errors : undefined,\n      message: `Successfully ingested ${batchItems.length} items${errors.length > 0 ? ` with ${errors.length} errors` : ''}`,\n    });\n  } catch (error) {\n    console.error('Error in ingest batch:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid request data', details: error.errors },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"qoDAwLO,eAAe,EAAY,CAAsC,EACtE,IAAI,EAAS,EAAM,IAAI,EAAI,GACvB,EAAO,GAGX,GAAI,EAAM,GAAG,EAAI,CAAC,EAAM,IAAI,CAC1B,CAD4B,EACxB,CACF,IAAM,EAAW,MAAM,MAAM,EAAM,GAAG,CAAE,CACtC,QAAS,CACP,aAAc,6CAChB,EAEA,OAAQ,YAAY,OAAO,CAAC,IAC9B,GAEA,GAAI,CAAC,EAAS,EAAE,CACd,CADgB,KACV,AAAI,MAAM,CAAC,0CAA0C,EAAE,EAAS,MAAM,CAAA,CAAE,CAO5E,EAHJ,EADA,AA3LG,GA2LI,IACE,EADI,EAAS,IAAI,EAAA,EA1L3B,OAAO,CA2LuB,AA3LtB,+BAAgC,IACxC,OAAO,CAAC,6BAA8B,IACtC,OAAO,CAAC,WAAY,KACpB,OAAO,CAAC,OAAQ,KAChB,IAAI,EAuL0B,EAGlB,MAAM,CAAG,KAClB,EADyB,CAChB,EAAO,SAAS,CAAC,EAAG,KAAS,iBAAA,CAE1C,CAAE,MAAO,EAAY,CACnB,MAAM,AAAI,MAAM,CAAC,0CAA0C,EAAE,aAAsB,MAAQ,EAAW,OAAO,CAAG,gBAAA,CAAiB,CACnI,CAGF,GAAI,CAAC,GAAmC,GAAG,CAA5B,EAAO,IAAI,GAAG,MAAM,CACjC,MAAM,AAAI,MAAM,qCAIlB,IAAM,EAjMR,AAiMkB,SAjMM,AAAf,CAA2B,CAAE,CAAY,EAEhD,IAAM,EAAa,EAAK,KAAK,CAAC,iCAC9B,GAAI,EAAY,CACd,IAAM,EAAQ,CAAU,CAAC,EAAE,CAAC,WAAW,GAEjC,EAAU,EAAM,KAAK,CAAC,0BAC5B,GAAI,EACF,OADW,AACJ,CAAO,CAAC,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,WAAY,IAAI,IAAI,GAGvD,IAAM,EAAY,EAAM,KAAK,CAAC,uBAC9B,GAAI,EACF,OAAO,CAAS,CADH,AACI,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,WAAY,IAAI,IAAI,EAE3D,CAGA,IAAM,EAAU,EAAK,KAAK,CAAC,2BAC3B,GAAI,EAAS,CAEX,IAAM,EADK,AACK,CADE,CAAC,EAAE,CAAC,WAAW,GACd,KAAK,CAAC,0BACzB,GAAI,EACF,OADW,AACJ,CAAO,CAAC,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,WAAY,IAAI,IAAI,EAEzD,CAGA,IAAM,EAAY,EAAK,KAAK,CAAC,oEAC7B,GAAI,EAAW,CAEb,IAAM,EADO,AACG,CADM,CAAC,EAAE,CAAC,WAAW,GAChB,KAAK,CAAC,0BAC3B,GAAI,EACF,OADW,AACJ,CAAO,CAAC,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,WAAY,IAAI,IAAI,EAEzD,CAQA,IAAK,IAAM,IALa,CACtB,MAIoB,uGAHpB,yHACD,CAEsC,CACrC,IAAM,EAAQ,EAAK,KAAK,CAAC,GACzB,GAAI,GAAS,CAAK,CAAC,EAAE,CAAC,MAAM,CAAG,GAAK,CAAK,CAAC,EAAE,CAAC,MAAM,CAAG,GACpD,CADwD,MACjD,CAAK,CAAC,EAAE,CAAC,IAAI,EAExB,CAGF,EA8IiC,EAAM,GAC/B,EA1IR,AA0Ie,SA1IN,AAAY,CAAY,CAAE,CAAY,EAE7C,IAAM,EAAa,EAAK,KAAK,CAAC,iCAC9B,GAAI,EAAY,CACd,IAAM,EAAQ,CAAU,CAAC,EAAE,CAErB,EAAY,EAAM,KAAK,CAAC,kCAC9B,GAAI,EACF,OAAO,CAAS,CAAC,AADJ,EACM,CAAC,IAAI,GAG1B,IAAM,EAAY,EAAM,KAAK,CAAC,+BAC9B,GAAI,EACF,OAAO,CAAS,CADH,AACI,EAAE,CAAC,IAAI,EAE5B,CAGA,IAAM,EAAU,EAAK,KAAK,CAAC,2BAC3B,GAAI,EAAS,CAEX,IAAM,EAAY,AADP,CAAO,CAAC,EAAE,CACA,KAAK,CAAC,kCAC3B,GAAI,EACF,OAAO,CAAS,CADH,AACI,EAAE,CAAC,IAAI,EAE5B,CAQA,IAAK,IAAM,IALc,CACvB,MAIoB,uIAHpB,iJACD,CAEuC,CACtC,IAAM,EAAQ,EAAK,KAAK,CAAC,GACzB,GAAI,GAAS,CAAK,CAAC,EAAE,CAAC,MAAM,CAAG,GAAK,CAAK,CAAC,EAAE,CAAC,MAAM,CAAG,GACpD,CADwD,MACjD,CAAK,CAAC,EAAE,CAAC,IAAI,EAExB,CAGF,EAiG2B,EAAM,GAGzB,EAAW,AA/FnB,SAAS,AAAgB,CAAY,EAEnC,IAAM,EAAY,IAAI,IAAI,CACxB,MAAO,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,OAAQ,KACxE,IAAK,KAAM,KAAM,KAAM,MAAO,MAAO,OAAQ,KAAM,OAAQ,QAAS,OACpE,MAAO,MAAO,KAAM,OAAQ,MAAO,OAAQ,QAAS,QAAS,SAC7D,OAAQ,OAAQ,QAAS,QAAS,IAAK,MAAO,KAAM,MAAO,KAAM,KAAM,OACvE,KAAM,MAAO,MAAO,KAAM,OAAQ,KAAM,OAAQ,MAAO,MAAO,MAAO,MAAO,QAC5E,MAAO,MAAO,OAAQ,QAAS,QAAS,QAAS,QAAS,SAAU,OACpE,MAAO,KAAM,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,MAAO,SACjE,OAAQ,OAAQ,OAAQ,QAAS,QAAS,UAAW,OAAQ,QAAS,OACtE,SAAU,UAAW,MAAO,MAAO,QAAS,SAAU,OAAQ,OAAQ,WACtE,MAAO,MAAO,OAAQ,MAAO,QAAS,QAAS,QAAS,MAAO,OAAQ,QACvE,OAAQ,MAAO,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAAU,UAC1E,YAAa,YAAa,WAAY,YAAa,WAAY,YAC/D,aAAc,SAAU,UAAW,YAAa,gBAAiB,cACjE,mBAAoB,SAAU,QAAS,WAAY,OAAQ,OAAQ,MAAO,WAC1E,OAAQ,UAAW,eAAgB,aAAc,SAAU,WAAY,SACvE,OAAQ,OAAQ,OAAQ,WAAY,YAAa,YAAa,SAAU,WACxE,cAAe,SAAU,SAAU,cAAe,WAAY,WAC9D,WAAY,SAAU,SAAU,UAAW,gBAAiB,UAC5D,QAAS,OAAQ,SAAU,QAAS,QAAS,OAAQ,OAAQ,MAC7D,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,SACpE,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAChE,YAAa,UAAW,WAAY,WACrC,EAGK,EAAQ,EACX,WAAW,GACX,OAAO,CAAC,WAAY,KACpB,KAAK,CAAC,OACN,MAAM,CAAC,GACN,EAAK,MAAM,EAAI,GACf,EAAK,MAAM,EAAI,IACf,CAAC,EAAU,GAAG,CAAC,IACf,CAAC,QAAQ,IAAI,CAAC,IAIZ,EAJkB,AAIN,IAAI,IAMtB,OALA,EAAM,OAAO,CAAC,CALoC,GAMhD,EAAU,GAAG,CAAC,EAAM,CAAC,EAAU,GAAG,CAAC,KAAS,CAAC,CAAI,EACnD,GAGO,MAAM,IAAI,CAAC,EAAU,OAAO,IAChC,IAAI,CAAC,CAAC,EAAG,IAAM,CAAC,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,EAC1B,KAAK,CAAC,EAAG,IACT,GAAG,CAAC,CAAC,CAAC,EAAK,GAAK,EACrB,EA6CmC,GAEjC,MAAO,SACL,OACA,EACA,OAAQ,EAAO,IAAI,YACnB,CACF,CACF,CArOC,EAAA,CAAA,CAAA,kNCHD,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,OAAA,IAAA,EAAA,EAAA,CAAA,CAAA,mCCfA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QAEA,IAAM,EAA2B,EAAA,CAAC,CAAC,MAAM,CAAC,CACxC,QAAS,EAAA,CAAC,CAAC,MAAM,GAAG,IAAI,GACxB,MAAO,EAAA,CAAC,CAAC,KAAK,CAAC,EAAA,CAAC,CAAC,MAAM,CAAC,CACtB,IAAK,EAAA,CAAC,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,GAC9B,KAAM,EAAA,CAAC,CAAC,MAAM,GAAG,QAAQ,GACzB,QAAS,EAAA,CAAC,CAAC,MAAM,GAAG,QAAQ,GAC5B,KAAM,EAAA,CAAC,CAAC,MAAM,GAAG,QAAQ,EAC3B,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,SAAS,QAAQ,GAAG,CAAC,eAAe,EAAI,MACzD,GAEO,eAAe,EAAK,CAAoB,EAC7C,GAAI,CACF,IAAM,EAAO,MAAM,EAAQ,IAAI,GACzB,SAAE,CAAO,OAAE,CAAK,CAAE,CAAG,EAAyB,KAAK,CAAC,GAGpD,CAAE,KAAM,CAAK,CAAE,MAAO,CAAU,CAAE,CAAG,MAAM,EAAA,cAAc,CAC5D,IAAI,CAAC,kBACL,MAAM,CAAC,uBACP,EAAE,CAAC,KAAM,GACT,MAAM,GAET,GAAI,GAAc,CAAC,EACjB,KADwB,EACjB,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,iBAAkB,EAC3B,CAAE,OAAQ,GAAI,GAIlB,GAAqB,WAAW,CAA5B,EAAM,MAAM,CACd,OAAO,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,gCAAiC,EAC1C,CAAE,OAAQ,GAAI,GAKlB,IAAM,EAAc,EAAM,MAAM,CAAC,CAAC,EAAM,EAAO,IAC7C,CAAC,EAAK,GAAG,EAAI,EAAK,SAAS,CAAC,GAAK,EAAE,GAAG,GAAK,EAAK,GAAG,IAAM,GAGrD,EAAa,EAAE,CACf,EAAS,EAAE,CAGjB,IAAK,IAAM,KAAQ,EACjB,GAAI,CAEF,IAAI,EAAiB,AAHO,CAI1B,QAAS,EAAK,OAAO,CACrB,KAAM,EAAK,IAAI,CACf,OAAQ,EAAK,IAAI,CACjB,SAAU,EAAE,AACd,EAEA,GAAI,EAAK,GAAG,EAAI,CAAC,EAAK,IAAI,CACxB,CAD0B,EACtB,CACF,IAAM,EAAa,MAAM,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,CAAE,IAAK,EAAK,GAAG,AAAC,GACrD,EAAiB,CACf,QAAS,EAAW,OAAO,EAAI,EAAK,OAAO,CAC3C,KAAM,EAAW,IAAI,EAAI,EAAK,IAAI,CAClC,OAAQ,EAAW,MAAM,CACzB,SAAU,EAAW,QAAQ,AAC/B,CACF,CAAE,MAAO,EAAgB,CACvB,EAAO,IAAI,CAAC,CACV,KAAM,EACN,MAAO,CAAC,wBAAwB,EAAE,aAA0B,MAAQ,EAAe,OAAO,CAAG,gBAAA,CAAiB,AAChH,GACA,QACF,MACK,GAAI,EAAK,IAAI,CAAE,CAEpB,IAAM,EAAa,MAAM,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,CAAE,KAAM,EAAK,IAAI,AAAC,GACvD,EAAe,QAAQ,CAAG,EAAW,QAAQ,AAC/C,CAEA,EAAW,IAAI,CAAC,CACd,SAAU,EACV,QAAS,EAAe,OAAO,CAC/B,KAAM,EAAe,IAAI,CACzB,OAAQ,EAAK,GAAG,CAChB,QAAS,EAAe,MAAM,CAC9B,SAAU,EAAe,QAAQ,CACjC,OAAQ,SACR,WAAY,IAAI,OAAO,WAAW,GAClC,WAAY,IAAI,OAAO,WAAW,EACpC,EACF,CAAE,MAAO,EAAW,CAClB,EAAO,IAAI,CAAC,CACV,KAAM,EACN,MAAO,CAAC,wBAAwB,EAAE,aAAqB,MAAQ,EAAU,OAAO,CAAG,gBAAA,CAAiB,AACtG,EACF,CAIF,GAAI,EAAW,MAAM,CAAG,EAAG,CACzB,GAAM,CAAE,MAAO,CAAW,CAAE,CAAG,MAAM,EAAA,cAAc,CAChD,IAAI,CAAC,sBACL,MAAM,CAAC,GAEV,GAAI,EAEF,OADA,IADe,IACP,KAAK,CAAC,+BAAgC,GACvC,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,8BAA+B,EACxC,CAAE,OAAQ,GAAI,EAGpB,CAGA,GAAM,CAAE,MAAO,CAAW,CAAE,CAAG,MAAM,EAAA,cAAc,CAChD,IAAI,CAAC,kBACL,MAAM,CAAC,CACN,MAAO,EAAW,MAAM,CACxB,WAAY,IAAI,OAAO,WAAW,EACpC,GACC,EAAE,CAAC,KAAM,GAMZ,OAJI,GACF,QAAQ,EADO,GACF,CAAC,8BAA+B,GAGxC,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,WAAY,EAAW,MAAM,CAC7B,OAAQ,EAAO,MAAM,CAAG,EAAI,EAAS,OACrC,QAAS,CAAC,sBAAsB,EAAE,EAAW,MAAM,CAAC,MAAM,EAAE,EAAO,MAAM,CAAG,EAAI,CAAC,MAAM,EAAE,EAAO,MAAM,CAAC,OAAO,CAAC,CAAG,GAAA,CACpH,AADwH,EAE1H,CAAE,MAAO,EAAO,CAGd,GAFA,QAAQ,KAAK,CAAC,yBAA0B,GAEpC,aAAiB,EAAA,CAAC,CAAC,QAAQ,CAC7B,CAD+B,MACxB,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,uBAAwB,QAAS,EAAM,MAAM,AAAC,EACvD,CAAE,OAAQ,GAAI,GAIlB,OAAO,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,uBAAwB,EACjC,CAAE,OAAQ,GAAI,EAElB,CACF,CDtIA,IAAA,EAAA,EAAA,CAAA,CAAA,QAIA,IAAM,EAAc,IAAI,EAAA,mBAAmB,CAAC,CACxC,WAAY,CACR,KAAM,EAAA,SAAS,CAAC,SAAS,CACzB,KAAM,0BACN,SAAU,oBACV,SAAU,QACV,WAAY,EAChB,EACA,QAAS,CAAA,OACT,IADiD,eACc,CAA3C,EACpB,iBAAkB,8CAClB,iBAZqB,GAarB,SAAA,CACJ,GAIM,kBAAE,CAAgB,CAAE,sBAAoB,CAAE,aAAW,CAAE,CAAG,EAChE,SAAS,IACL,MAAO,CAAA,EAAA,EAAA,UAAA,AAAW,EAAC,kBACf,uBACA,CACJ,EACJ,CAEO,eAAe,EAAQ,CAAG,CAAE,CAAG,CAAE,CAAG,EACvC,IAAI,EACJ,IAAI,EAAU,0BAKV,EAAU,EAAQ,OAAO,CAAC,WAAY,KAAO,IAMjD,IAAM,EAAgB,MAAM,EAAY,OAAO,CAAC,EAAK,EAAK,SACtD,EACA,mBAHE,CAAA,CAIN,GACA,GAAI,CAAC,EAID,OAHA,EAAI,IADY,MACF,CAAG,IACjB,EAAI,GAAG,CAAC,eACS,MAAjB,CAAwB,CAApB,IAAyB,KAAhB,EAAoB,EAAI,SAAS,CAAC,IAAI,CAAC,EAAK,QAAQ,OAAO,IACjE,KAEX,GAAM,SAAE,CAAO,QAAE,CAAM,YAAE,CAAU,aAAE,CAAW,mBAAE,CAAiB,CAAE,qBAAmB,sBAAE,CAAoB,yBAAE,CAAuB,kBAAE,CAAgB,CAAE,CAAG,EACxJ,EAAoB,CAAA,EAAA,EAAA,gBAAA,AAAgB,EAAC,GACvC,EAAQ,GAAQ,EAAkB,aAAa,CAAC,EAAkB,EAAI,EAAkB,MAAM,CAAC,EAAA,AAAiB,EACpH,GAAI,GAAS,CAAC,EAAa,CACvB,IAAM,GAAgB,CAAQ,EAAkB,MAAM,CAAC,EAAiB,CAClE,EAAgB,EAAkB,aAAa,CAAC,EAAkB,CACxE,GAAI,IAC+B,IAA3B,EAAc,KADH,GACW,EAAc,CAAC,EACrC,MAAM,IAAI,EAAA,CAD0C,cAC3B,AAGrC,CACA,IAAI,EAAW,MACX,GAAU,EAAY,IAAb,CAAkB,EAAK,EAAD,EAG/B,EAAW,AAAa,OAHqB,KAC7C,EAAW,CAAA,EAEwB,IAAM,CAAA,EAE7C,IAAM,GACgB,IAAtB,EAAY,EAAkB,GAAb,EAEjB,CAAC,EAKK,EAAe,GAAS,CAAC,EACzB,EAAS,EAAI,MAAM,EAAI,MACvB,EAAS,CAAA,EAAA,EAAA,SAAA,AAAS,IAClB,EAAa,EAAO,WAVyE,OAUvD,GACtC,EAAU,QACZ,oBACA,EACA,WAAY,CACR,aAAc,CACV,iBAAiB,CAAQ,EAAW,YAAY,CAAC,eAAe,CAChE,gBAAgB,CAAQ,EAAW,YAAY,CAAC,cAAc,AAClE,0BACA,EACA,iBAAkB,CAAA,EAAA,EAAA,cAAc,AAAd,EAAe,EAAK,oBACtC,kBAAmB,AAAwD,OAAvD,EAA2B,EAAW,YAAA,AAAY,EAAY,KAAK,EAAI,EAAyB,SAAS,CAC7H,eACA,UAAW,EAAI,SAAS,CACxB,QAAS,AAAC,IACN,EAAI,EAAE,CAAC,QAAS,EACpB,EACA,sBAAkB,EAClB,8BAA+B,CAAC,EAAO,EAAU,IAAe,EAAY,cAAc,CAAC,EAAK,EAAO,EAAc,EACzH,EACA,cAAe,SACX,CACJ,CACJ,EACM,EAAc,IAAI,EAAA,eAAe,CAAC,GAClC,EAAc,IAAI,EAAA,gBAAgB,CAAC,GACnC,EAAU,EAAA,kBAAkB,CAAC,mBAAmB,CAAC,EAAa,CAAA,EAAA,EAAA,sBAAsB,AAAtB,EAAuB,IAC3F,GAAI,CACA,IAAM,EAAoB,MAAO,GACtB,EAAY,MAAM,CAAC,EAAS,GAAS,OAAO,CAAC,KAChD,GAAI,CAAC,EAAM,OACX,EAAK,aAAa,CAAC,CACf,mBAAoB,EAAI,UAAU,CAClC,YAAY,CAChB,GACA,IAAM,EAAqB,EAAO,qBAAqB,GAEvD,GAAI,CAAC,EACD,OAEJ,GAAI,EAAmB,GAAG,CAAC,EAHF,kBAGwB,EAAA,cAAc,CAAC,aAAa,CAAE,YAC3E,QAAQ,IAAI,CAAC,CAAC,2BAA2B,EAAE,EAAmB,GAAG,CAAC,kBAAkB,qEAAqE,CAAC,EAG9J,IAAM,EAAQ,EAAmB,GAAG,CAAC,cACrC,GAAI,EAAO,CACP,IAAM,EAAO,CAAA,EAAG,EAAO,CAAC,EAAE,EAAA,CAAO,CACjC,EAAK,aAAa,CAAC,CACf,aAAc,EACd,aAAc,EACd,iBAAkB,CACtB,GACA,EAAK,UAAU,CAAC,EACpB,MACI,CADG,CACE,UAAU,CAAC,CAAA,EAAG,EAAO,CAAC,EAAE,EAAI,GAAG,CAAA,CAAE,CAE9C,GAEE,EAAiB,MAAO,QACtB,EA0FI,EAzFR,IAAM,EAAoB,MAAO,oBAAE,CAAkB,CAAE,IACnD,GAAI,CACA,GAAI,CAAC,CAAA,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAkB,GAAwB,GAA2B,CAAC,EAK3F,OAJA,EAAI,SAD2G,CACjG,CAAG,IAEjB,EAAI,SAAS,CAAC,iBAAkB,eAChC,EAAI,GAAG,CAAC,gCACD,KAEX,IAAM,EAAW,MAAM,EAAkB,GACzC,EAAI,YAAY,CAAG,EAAQ,UAAU,CAAC,YAAY,CAClD,IAAI,EAAmB,EAAQ,UAAU,CAAC,gBAAgB,CAGtD,GACI,EAAI,SAAS,EAAE,CACf,CAFc,CAEV,SAAS,CAAC,GACd,OAAmB,GAG3B,IAAM,EAAY,EAAQ,UAAU,CAAC,aAAa,CAGlD,IAAI,EA6BA,OADA,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,EAAa,EAAa,EAAU,EAAQ,UAAU,CAAC,gBAAgB,EACnF,IA7BA,EACP,IAAM,EAAO,MAAM,EAAS,IAAI,GAE1B,EAAU,CAAA,EAAA,EAAA,yBAAA,AAAyB,EAAC,EAAS,OAAO,EACtD,IACA,CAAO,CAAC,EAAA,GADG,mBACmB,CAAC,CAAG,CAAA,EAElC,CAAC,CAAO,CAAC,eAAe,EAAI,EAAK,IAAI,EAAE,CACvC,CAAO,CAAC,eAAe,CAAG,EAAK,IAAA,AAAI,EAEvC,IAAM,EAAa,AAAkD,SAA3C,EAAQ,UAAU,CAAC,mBAAmB,IAAoB,EAAQ,UAAU,CAAC,mBAAmB,EAAI,EAAA,cAAA,AAAc,GAAG,AAAQ,EAAQ,UAAU,CAAC,mBAAmB,CACvL,EAAS,KAA8C,IAAvC,EAAQ,UAAU,CAAC,eAAe,EAAoB,EAAQ,UAAU,CAAC,eAAe,EAAI,EAAA,cAAc,MAAG,EAAY,EAAQ,UAAU,CAAC,eAAe,CAcjL,MAZmB,CAYZ,AAXH,MAAO,CACH,KAAM,EAAA,eAAe,CAAC,SAAS,CAC/B,OAAQ,EAAS,MAAM,CACvB,KAAM,OAAO,IAAI,CAAC,MAAM,EAAK,WAAW,YACxC,CACJ,EACA,aAAc,YACV,SACA,CACJ,CACJ,CAEJ,CAKJ,CAAE,KALS,CAKF,EAAK,CAcV,MAX0B,MAAtB,EAA6B,KAAK,EAAI,EAAmB,OAAO,AAAP,EAAS,CAClE,MAAM,EAAY,cAAc,CAAC,EAAK,EAAK,CACvC,WAAY,aACZ,UAAW,EACX,UAAW,QACX,iBAAkB,CAAA,EAAA,EAAA,mBAAA,AAAmB,EAAC,cAClC,uBACA,CACJ,EACJ,EAAG,GAED,CACV,CACJ,EACM,EAAa,MAAM,EAAY,cAAc,CAAC,KAChD,aACA,EACA,WACA,UAAW,EAAA,SAAS,CAAC,SAAS,CAC9B,YAAY,oBACZ,EACA,mBAAmB,EACnB,uBACA,4CACA,EACA,UAAW,EAAI,SAAS,AAC5B,GAEA,GAAI,CAAC,EACD,KADQ,EACD,KAEX,GAAI,CAAe,MAAd,CAAqB,EAAS,AAA0C,GAA9C,IAAK,EAAoB,EAAW,KAAA,AAAK,EAAY,KAAK,EAAI,EAAkB,IAAI,IAAM,EAAA,eAAe,CAAC,SAAS,CAE9I,CAFgJ,KAE1I,OAAO,cAAc,CAAC,AAAI,MAAM,CAAC,kDAAkD,EAAgB,MAAd,CAAqB,EAAS,AAA2C,GAA/C,IAAK,EAAqB,EAAW,KAAA,AAAK,EAAY,KAAK,EAAI,EAAmB,IAAI,CAAA,CAAE,EAAG,oBAAqB,CACjO,MAAO,OACP,YAAY,EACZ,cAAc,CAClB,EAEA,CAAC,CAAA,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAgB,AACrC,EAAI,SAAS,CAAC,iBAAkB,EAAuB,cAAgB,EAAW,MAAM,CAAG,OAAS,EAAW,OAAO,CAAG,QAAU,OAGnI,GACA,EAAI,QADS,CACA,CAAC,gBAAiB,2DAEnC,IAAM,EAAU,CAAA,EAAA,EAAA,2BAA2B,AAA3B,EAA4B,EAAW,KAAK,CAAC,OAAO,EAapE,MAZI,AAAE,CAAD,AAAC,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAkB,GACxC,EAD6C,AACrC,GADwC,GAClC,CAAC,EAAA,sBAAsB,GAIrC,EAAW,YAAY,EAAK,EAAD,AAAK,SAAS,CAAC,kBAAqB,EAAD,AAAS,GAAG,CAAC,kBAAkB,AAC7F,EAAQ,GAAG,CAAC,gBAAiB,CAAA,EAAA,EAAA,qBAAA,AAAqB,EAAC,EAAW,YAAY,GAE9E,MAAM,CAAA,EAAA,EAAA,YAAY,AAAZ,EAAa,EAAa,EAAa,IAAI,SAAS,EAAW,KAAK,CAAC,IAAI,CAAE,SAC7E,EACA,OAAQ,EAAW,KAAK,CAAC,MAAM,EAAI,GACvC,IACO,IACX,EAGI,EACA,MAAM,EAAe,EADT,CAGZ,MAAM,EAAO,qBAAqB,CAAC,EAAI,OAAO,CAAE,IAAI,EAAO,KAAK,CAAC,EAAA,cAAc,CAAC,aAAa,CAAE,CACvF,SAAU,CAAA,EAAG,EAAO,CAAC,EAAE,EAAI,GAAG,CAAA,CAAE,CAChC,KAAM,EAAA,QAAQ,CAAC,MAAM,CACrB,WAAY,CACR,cAAe,EACf,cAAe,EAAI,GAAG,AAC1B,CACJ,EAAG,GAEf,CAAE,MAAO,EAAK,CAeV,GAbI,AAAC,GAAgB,WAAF,CAAC,CAAgB,EAAA,eAAe,EAC/C,CADkD,KAC5C,EAAY,cAAc,CAAC,EAAK,EAAK,CACvC,WAAY,aACZ,UAAW,EACX,UAAW,QACX,iBAAkB,CAAA,EAAA,EAAA,mBAAA,AAAmB,EAAC,cAClC,EACA,sBACJ,EACJ,GAIA,EAAO,MAAM,EAKjB,OAHA,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,EAAa,EAAa,IAAI,SAAS,KAAM,CAC5D,OAAQ,GACZ,IACO,IACX,CACJ,EAEA,qCAAqC","ignoreList":[1]}