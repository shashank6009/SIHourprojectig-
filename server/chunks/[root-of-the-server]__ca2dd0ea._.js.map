{"version":3,"sources":["turbopack:///[project]/src/app/api/parse-resume/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\n// Ensure Node.js runtime for pdf-parse/mammoth (required for Buffer operations)\nexport const runtime = 'nodejs';\nexport const dynamic = 'force-dynamic';\nexport const maxDuration = 120; // Maximum timeout for complex PDFs\n\nexport async function POST(req: Request) {\n  try {\n    console.log('Server: API endpoint called');\n    \n    const form = await req.formData();\n    const file = form.get(\"file\");\n\n    if (!(file instanceof File)) {\n      console.log('Server: No file uploaded');\n      return NextResponse.json({ error: \"No file uploaded\" }, { status: 400 });\n    }\n\n    console.log('Server: File received:', {\n      name: file.name,\n      size: file.size,\n      type: file.type\n    });\n\n    // Check file size (5MB limit)\n    if (file.size > 5 * 1024 * 1024) {\n      console.log('Server: File too large:', file.size);\n      return NextResponse.json({ error: \"File too large. Please upload a file smaller than 5MB.\" }, { status: 400 });\n    }\n\n    console.log('Server: Processing file:', file.name, 'Type:', file.type, 'Size:', file.size);\n\n    const arrayBuffer = await file.arrayBuffer();\n    const buffer = Buffer.from(arrayBuffer);\n    \n    // Some browsers (esp. iOS/Safari) provide an empty type. Fallback to file extension.\n    let contentType = file.type || \"\";\n    const lowerName = (file.name || \"\").toLowerCase();\n    if (!contentType || contentType === \"application/octet-stream\") {\n      if (lowerName.endsWith(\".pdf\")) contentType = \"application/pdf\";\n      else if (lowerName.endsWith(\".docx\")) contentType = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n      else if (lowerName.endsWith(\".txt\")) contentType = \"text/plain\";\n    }\n\n    console.log('Server: Detected content type:', contentType);\n\n    let text = \"\";\n\n    if (contentType.includes(\"pdf\")) {\n      try {\n        console.log('Server: Parsing PDF...');\n        \n        // BULLETPROOF pdf-parse loading with multiple attempts\n        let pdfParse;\n        let importAttempts = 0;\n        const maxImportAttempts = 3;\n        \n        while (importAttempts < maxImportAttempts) {\n          try {\n            importAttempts++;\n            console.log(`Server: pdf-parse import attempt ${importAttempts}...`);\n            \n            const pdfParseModule = await import(\"pdf-parse\");\n            pdfParse = pdfParseModule.default || pdfParseModule;\n            \n            // Verify the function is callable\n            if (typeof pdfParse !== 'function') {\n              throw new Error('pdf-parse is not a function');\n            }\n            \n            console.log('Server: pdf-parse module loaded and verified successfully');\n            break;\n            \n          } catch (importError) {\n            console.error(`Server: pdf-parse import attempt ${importAttempts} failed:`, importError);\n            \n            if (importAttempts >= maxImportAttempts) {\n              console.error('Server: All pdf-parse import attempts failed');\n              throw new Error('PDF parsing library cannot be loaded in this environment - please use text paste option');\n            }\n            \n            // Wait a bit before retrying\n            await new Promise(resolve => setTimeout(resolve, 100));\n          }\n        }\n        \n        // Validate buffer before parsing\n        if (!buffer || buffer.length === 0) {\n          throw new Error('Empty or invalid PDF buffer');\n        }\n        \n        console.log('Server: Buffer size:', buffer.length, 'bytes');\n        \n        // Try multiple parsing approaches for better reliability\n        let data;\n        \n        // First attempt: Standard parsing\n        try {\n          console.log('Server: Attempting standard PDF parsing...');\n          const options = {\n            max: 0, // No page limit\n          };\n          data = await pdfParse(buffer, options);\n        } catch (standardError) {\n          console.log('Server: Standard parsing failed, trying alternative approach...');\n          \n          // Second attempt: Simple parsing without options\n          try {\n            data = await pdfParse(buffer);\n          } catch (simpleError) {\n            console.log('Server: Simple parsing also failed');\n            throw standardError; // Throw the original error\n          }\n        }\n        \n        text = data?.text || \"\";\n        console.log('Server: PDF parsed successfully, text length:', text.length);\n        \n        // Validate extracted text\n        if (!text || text.trim().length === 0) {\n          console.log('Server: PDF parsing succeeded but no text extracted');\n          throw new Error('No text could be extracted from the PDF - it may contain only images or be corrupted');\n        }\n        \n      } catch (pdfError: unknown) {\n        console.error('Server: PDF parsing error:', pdfError);\n        console.error('Server: Error details:', {\n          name: pdfError instanceof Error ? pdfError.name : 'Unknown',\n          message: pdfError instanceof Error ? pdfError.message : 'Unknown error',\n          stack: pdfError instanceof Error ? pdfError.stack : 'No stack trace'\n        });\n        \n        // Provide more specific error information\n        let errorMessage = \"Failed to process PDF resume: \";\n        if (pdfError instanceof Error) {\n          if (pdfError.message.includes('library not available')) {\n            errorMessage += \"PDF processing is temporarily unavailable on the server. \";\n          } else if (pdfError.message.includes('Cannot read property') || pdfError.message.includes('undefined')) {\n            errorMessage += \"PDF parsing library error. \";\n          } else if (pdfError.message.includes('Invalid PDF') || pdfError.message.includes('corrupted')) {\n            errorMessage += \"Invalid or corrupted PDF file. \";\n          } else if (pdfError.message.includes('password')) {\n            errorMessage += \"Password-protected PDF detected. \";\n          } else if (pdfError.message.includes('No text could be extracted')) {\n            errorMessage += \"PDF appears to contain only images or no readable text. \";\n          } else {\n            errorMessage += `PDF processing error: ${pdfError.message}. `;\n          }\n        } else {\n          errorMessage += \"Unknown PDF processing error. \";\n        }\n        \n        errorMessage += \"\\n\\nPlease try:\\n• Use the 'Paste Resume Text' option below\\n• Convert PDF to Word/TXT format\\n• Ensure PDF is not password-protected\\n• Use a PDF with selectable text (not scanned images)\";\n        \n        return NextResponse.json({ \n          error: errorMessage,\n          type: 'PDF_PROCESSING_ERROR'\n        }, { status: 422 });\n      }\n    } else if (contentType.includes(\"wordprocessingml\")) {\n      try {\n        console.log('Server: Parsing DOCX...');\n        const mammoth = await import(\"mammoth\");\n        const result = await mammoth.extractRawText({ buffer });\n        text = result?.value || \"\";\n        console.log('Server: DOCX parsed, text length:', text.length);\n      } catch (docxError) {\n        console.error('Server: DOCX parsing error:', docxError);\n        return NextResponse.json({ error: \"Failed to parse DOCX. The file might be corrupted.\" }, { status: 422 });\n      }\n    } else if (contentType === \"text/plain\") {\n      text = buffer.toString(\"utf8\");\n      console.log('Server: Text file read, length:', text.length);\n    } else {\n      console.log('Server: Unsupported file type:', contentType);\n      return NextResponse.json({ error: `Unsupported file type: ${contentType || 'unknown'}. Please upload PDF, DOCX, or TXT files.` }, { status: 415 });\n    }\n\n    if (!text || text.trim().length === 0) {\n      console.log('Server: No text extracted from file');\n      return NextResponse.json({ error: \"The file appears to be empty or contains no readable text.\" }, { status: 422 });\n    }\n\n    // Clean up the text a bit\n    text = text\n      .replace(/\\r\\n/g, '\\n') // Normalize line endings\n      .replace(/\\t/g, ' ') // Replace tabs with spaces\n      .replace(/  +/g, ' ') // Replace multiple spaces with single space\n      .trim();\n\n    console.log('Server: Returning text, first 200 chars:', text.substring(0, 200));\n    return NextResponse.json({ text });\n  } catch (error: unknown) {\n    console.error('Server: Unexpected error:', error);\n    console.error('Server: Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n    return NextResponse.json({ error: error instanceof Error ? error.message : \"Server error while processing file\" }, { status: 500 });\n  }\n}\n\n\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/parse-resume/route\",\n        pathname: \"/api/parse-resume\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/parse-resume/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/parse-resume/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}