{"version":3,"sources":["turbopack:///[project]/src/lib/analytics.ts","turbopack:///[project]/src/lib/privacy.ts","turbopack:///[project]/node_modules/safe-buffer/index.js","turbopack:///[project]/src/app/api/batch/export/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { supabaseServer } from './supabase-server';\nimport { hashUserId, sanitizeMetadata } from './privacy';\n\nexport type EventType = \n  | \"INTERVIEW_COMPLETED\" \n  | \"JD_ALIGNED\" \n  | \"PDF_EXPORTED\" \n  | \"COMMENT_ADDED\" \n  | \"COMMENT_RESOLVED\" \n  | \"MENTOR_APPROVED\"\n  | \"BATCH_CREATED\"\n  | \"BATCH_ITEM_COMPLETED\"\n  | \"BATCH_EXPORTED\"\n  | \"EMAIL_DRAFT_CREATED\"\n  | \"FOLLOWUP_SCHEDULED\"\n  | \"ATS_CHECKLIST_VIEWED\"\n  | \"REFERRAL_INTRO_DRAFTED\"\n  | \"REFERRAL_IMPORTED\"\n  | \"CONSENT_GRANTED\"\n  | \"CONSENT_REVOKED\"\n  | \"DSR_EXPORT_REQUESTED\"\n  | \"DSR_DELETE_REQUESTED\"\n  | \"PRIVACY_REGION_SET\";\n\nexport interface EventMetadata {\n  [key: string]: any;\n}\n\n/**\n * Track user events for analytics and continuous improvement\n * All PII is hashed and metadata is sanitized for privacy\n */\nexport async function trackEvent(args: {\n  userId: string;\n  event: EventType;\n  resumeVersionId?: string;\n  metadata?: EventMetadata;\n}): Promise<void> {\n  try {\n    const { userId, event, resumeVersionId, metadata = {} } = args;\n    \n    // Hash user ID for privacy\n    const userHash = hashUserId(userId);\n    \n    // Sanitize metadata to remove PII and limit size\n    const sanitizedMetadata = sanitizeMetadata(metadata);\n    \n    // Insert event into database\n    const { error } = await supabaseServer\n      .from('resume_events')\n      .insert({\n        user_hash: userHash,\n        resume_version_id: resumeVersionId || null,\n        event_type: event,\n        metadata: sanitizedMetadata,\n      });\n    \n    if (error) {\n      console.error('Failed to track event:', error);\n      // Don't throw - analytics failures shouldn't break user flows\n    }\n  } catch (error) {\n    console.error('Analytics tracking error:', error);\n    // Silently fail to avoid breaking user experience\n  }\n}\n\n/**\n * Get user events for a specific time range\n * Used for analytics and debugging\n */\nexport async function getUserEvents(\n  userId: string,\n  startDate?: string,\n  endDate?: string,\n  eventType?: EventType\n): Promise<any[]> {\n  try {\n    const userHash = hashUserId(userId);\n    \n    let query = supabaseServer\n      .from('resume_events')\n      .select('*')\n      .eq('user_hash', userHash)\n      .order('created_at', { ascending: false });\n    \n    if (startDate) {\n      query = query.gte('created_at', startDate);\n    }\n    \n    if (endDate) {\n      query = query.lte('created_at', endDate);\n    }\n    \n    if (eventType) {\n      query = query.eq('event_type', eventType);\n    }\n    \n    const { data, error } = await query.limit(100);\n    \n    if (error) {\n      console.error('Failed to fetch user events:', error);\n      return [];\n    }\n    \n    return data || [];\n  } catch (error) {\n    console.error('Error fetching user events:', error);\n    return [];\n  }\n}\n\n/**\n * Get aggregated metrics for a date range\n */\nexport async function getMetrics(\n  startDate: string,\n  endDate: string,\n  userHash?: string\n): Promise<any[]> {\n  try {\n    let query = supabaseServer\n      .from('resume_metrics_daily')\n      .select('*')\n      .gte('day', startDate)\n      .lte('day', endDate)\n      .order('day', { ascending: false });\n    \n    if (userHash) {\n      query = query.eq('user_hash', userHash);\n    }\n    \n    const { data, error } = await query;\n    \n    if (error) {\n      console.error('Failed to fetch metrics:', error);\n      return [];\n    }\n    \n    return data || [];\n  } catch (error) {\n    console.error('Error fetching metrics:', error);\n    return [];\n  }\n}\n\n/**\n * Track model run for audit and improvement\n */\nexport async function trackModelRun(args: {\n  userId: string;\n  resumeVersionId?: string;\n  provider: string;\n  model: string;\n  promptKey: string;\n  tokensIn?: number;\n  tokensOut?: number;\n  atsScore?: number;\n  missingKeywords?: number;\n}): Promise<void> {\n  try {\n    const { userId, resumeVersionId, provider, model, promptKey, tokensIn, tokensOut, atsScore, missingKeywords } = args;\n    \n    const userHash = hashUserId(userId);\n    \n    const { error } = await supabaseServer\n      .from('resume_model_runs')\n      .insert({\n        user_hash: userHash,\n        resume_version_id: resumeVersionId || null,\n        provider,\n        model,\n        prompt_key: promptKey,\n        tokens_in: tokensIn || 0,\n        tokens_out: tokensOut || 0,\n        ats_score: atsScore || null,\n        missing_keywords: missingKeywords || 0,\n      });\n    \n    if (error) {\n      console.error('Failed to track model run:', error);\n    }\n  } catch (error) {\n    console.error('Model run tracking error:', error);\n  }\n}\n","import { createHash } from 'crypto';\n\n/**\n * Hash user ID for privacy-safe analytics\n * Uses SHA-256 to create a consistent hash that can't be reversed\n */\nexport function hashUserId(raw: string): string {\n  if (!raw) return '';\n  \n  // Use Node.js crypto for server-side hashing\n  return createHash('sha256').update(raw).digest('hex');\n}\n\n/**\n * Redact PII from text for safe logging\n * Removes emails, phone numbers, and other sensitive data\n */\nexport function redactPII(text: string): string {\n  if (!text) return '';\n  \n  let redacted = text;\n  \n  // Remove email addresses\n  redacted = redacted.replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '[email]');\n  \n  // Remove phone numbers (various formats)\n  redacted = redacted.replace(/\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b/g, '[phone]');\n  redacted = redacted.replace(/\\b\\(\\d{3}\\)\\s*\\d{3}[-.]?\\d{4}\\b/g, '[phone]');\n  redacted = redacted.replace(/\\b\\d{3}\\s\\d{3}\\s\\d{4}\\b/g, '[phone]');\n  \n  // Remove SSN patterns (basic)\n  redacted = redacted.replace(/\\b\\d{3}-\\d{2}-\\d{4}\\b/g, '[ssn]');\n  redacted = redacted.replace(/\\b\\d{9}\\b/g, '[ssn]');\n  \n  // Remove credit card patterns (basic)\n  redacted = redacted.replace(/\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g, '[card]');\n  \n  return redacted;\n}\n\n/**\n * Sanitize metadata for safe storage\n * Ensures metadata is JSON-safe and within size limits\n */\nexport function sanitizeMetadata(metadata: Record<string, any>): Record<string, any> {\n  if (!metadata || typeof metadata !== 'object') return {};\n  \n  const sanitized: Record<string, any> = {};\n  \n  for (const [key, value] of Object.entries(metadata)) {\n    // Skip if key is too long or contains sensitive patterns\n    if (key.length > 50 || /password|secret|token|key/i.test(key)) {\n      continue;\n    }\n    \n    // Handle different value types\n    if (typeof value === 'string') {\n      // Redact PII from strings and limit length\n      sanitized[key] = redactPII(value).substring(0, 500);\n    } else if (typeof value === 'number' || typeof value === 'boolean') {\n      sanitized[key] = value;\n    } else if (Array.isArray(value)) {\n      // Limit array size and sanitize each element\n      sanitized[key] = value.slice(0, 10).map(item => \n        typeof item === 'string' ? redactPII(item).substring(0, 100) : item\n      );\n    } else if (typeof value === 'object' && value !== null) {\n      // Recursively sanitize nested objects (limited depth)\n      sanitized[key] = sanitizeMetadata(value);\n    }\n  }\n  \n  // Ensure total size is under 2KB\n  const jsonString = JSON.stringify(sanitized);\n  if (jsonString.length > 2000) {\n    // Truncate by removing largest values\n    const entries = Object.entries(sanitized).sort((a, b) => \n      JSON.stringify(b[1]).length - JSON.stringify(a[1]).length\n    );\n    \n    const truncated: Record<string, any> = {};\n    let currentSize = 0;\n    \n    for (const [key, value] of entries) {\n      const entrySize = JSON.stringify({ [key]: value }).length;\n      if (currentSize + entrySize < 1800) { // Leave some buffer\n        truncated[key] = value;\n        currentSize += entrySize;\n      }\n    }\n    \n    return truncated;\n  }\n  \n  return sanitized;\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","import { NextRequest, NextResponse } from 'next/server';\nimport { supabaseServer } from '@/lib/supabase-server';\nimport { trackEvent } from '@/lib/analytics';\nimport JSZip from 'jszip';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const batchId = searchParams.get('batchId');\n\n    if (!batchId) {\n      return NextResponse.json(\n        { error: 'batchId parameter is required' },\n        { status: 400 }\n      );\n    }\n\n    // Verify batch exists and belongs to user\n    const { data: batch, error: batchError } = await supabaseServer\n      .from('resume_batches')\n      .select('*')\n      .eq('id', batchId)\n      .single();\n\n    if (batchError || !batch) {\n      return NextResponse.json(\n        { error: 'Batch not found' },\n        { status: 404 }\n      );\n    }\n\n    // Get completed batch items\n    const { data: items, error: itemsError } = await supabaseServer\n      .from('resume_batch_items')\n      .select('*')\n      .eq('batch_id', batchId)\n      .eq('status', 'done')\n      .order('created_at', { ascending: true });\n\n    if (itemsError) {\n      console.error('Error fetching batch items:', itemsError);\n      return NextResponse.json(\n        { error: 'Failed to fetch batch items' },\n        { status: 500 }\n      );\n    }\n\n    if (!items || items.length === 0) {\n      return NextResponse.json(\n        { error: 'No completed items found in batch' },\n        { status: 404 }\n      );\n    }\n\n    // Create ZIP file\n    const zip = new JSZip();\n    const trackerData = [];\n\n    // Process each item\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      const company = item.company || 'Unknown';\n      const role = item.role || 'Position';\n      \n      // Sanitize filenames\n      const safeCompany = company.replace(/[^a-zA-Z0-9-]/g, '-').toLowerCase();\n      const safeRole = role.replace(/[^a-zA-Z0-9-]/g, '-').toLowerCase();\n      const folderName = `${i + 1}_${safeCompany}_${safeRole}`;\n\n      // Add files to ZIP\n      if (item.assets) {\n        const assets = item.assets as Record<string, string>;\n\n        // Add resume PDF\n        if (assets.resumePdf) {\n          try {\n            const resumeResponse = await fetch(assets.resumePdf);\n            if (resumeResponse.ok) {\n              const resumeBuffer = await resumeResponse.arrayBuffer();\n              zip.file(`${folderName}/resume.pdf`, resumeBuffer);\n            }\n          } catch (error) {\n            console.warn(`Failed to fetch resume PDF for item ${item.id}:`, error);\n          }\n        }\n\n        // Add cover letter PDF\n        if (assets.coverPdf) {\n          try {\n            const coverResponse = await fetch(assets.coverPdf);\n            if (coverResponse.ok) {\n              const coverBuffer = await coverResponse.arrayBuffer();\n              zip.file(`${folderName}/cover.pdf`, coverBuffer);\n            }\n          } catch (error) {\n            console.warn(`Failed to fetch cover PDF for item ${item.id}:`, error);\n          }\n        }\n\n        // Add email template\n        if (assets.emailTxt) {\n          zip.file(`${folderName}/email.txt`, assets.emailTxt);\n        }\n\n        // Add LinkedIn InMail template\n        if (assets.inmailTxt) {\n          zip.file(`${folderName}/inmail.txt`, assets.inmailTxt);\n        }\n      }\n\n      // Add to tracker data\n      trackerData.push({\n        company: item.company || '',\n        role: item.role || '',\n        jd_url: item.jd_url || '',\n        ats_score: item.ats_score || 0,\n        resume_url: item.assets?.resumePdf || '',\n        cover_url: item.assets?.coverPdf || '',\n        email_path: `${folderName}/email.txt`,\n        inmail_path: `${folderName}/inmail.txt`,\n        status: item.status,\n        outreach_status: item.assets?.trackerEvents?.slice(-1)[0]?.status || 'Not Started',\n        updated_at: item.updated_at,\n      });\n    }\n\n    // Create tracker CSV\n    const csvHeaders = [\n      'company',\n      'role',\n      'jd_url',\n      'ats_score',\n      'resume_url',\n      'cover_url',\n      'email_path',\n      'inmail_path',\n      'status',\n      'outreach_status',\n      'updated_at'\n    ];\n\n    const csvContent = [\n      csvHeaders.join(','),\n      ...trackerData.map(row => \n        csvHeaders.map(header => {\n          const value = row[header as keyof typeof row] || '';\n          // Escape CSV values\n          return typeof value === 'string' && value.includes(',') \n            ? `\"${value.replace(/\"/g, '\"\"')}\"` \n            : value;\n        }).join(',')\n      )\n    ].join('\\n');\n\n    zip.file('tracker.csv', csvContent);\n\n    // Generate ZIP buffer\n    const zipBuffer = await zip.generateAsync({ type: 'nodebuffer' });\n\n    // Track batch export\n    await trackEvent({\n      userId: batch.user_id,\n      event: 'BATCH_EXPORTED',\n      metadata: {\n        batchId: batch.id,\n        itemCount: items.length,\n        totalSize: zipBuffer.length,\n      },\n    });\n\n    // Return ZIP file\n    return new NextResponse(zipBuffer, {\n      headers: {\n        'Content-Type': 'application/zip',\n        'Content-Disposition': `attachment; filename=\"batch_${batch.label.replace(/[^a-zA-Z0-9-]/g, '_')}_${new Date().toISOString().split('T')[0]}.zip\"`,\n        'Content-Length': zipBuffer.length.toString(),\n      },\n    });\n  } catch (error) {\n    console.error('Error in batch export:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/batch/export/route\",\n        pathname: \"/api/batch/export\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/batch/export/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/batch/export/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[2,4]}