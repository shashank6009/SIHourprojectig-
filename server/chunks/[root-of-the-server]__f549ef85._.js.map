{"version":3,"sources":["turbopack:///[project]/src/lib/processing-log.ts","turbopack:///[project]/src/lib/crypto.ts","turbopack:///[project]/src/app/api/dsr/delete/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/src/lib/privacy-vault.ts"],"sourcesContent":["/**\n * Processing Log Service\n * Handles immutable logging of data processing activities\n */\n\nimport { supabaseServer } from './supabase-server';\nimport { redactSensitive } from './crypto';\n\nexport interface ProcessingLogEntry {\n  userId?: string;\n  action: string;\n  lawfulBasis?: string;\n  consentVersion?: string;\n  scopesUsed?: string[];\n  subjectId?: string;\n  metadata?: Record<string, any>;\n}\n\n/**\n * Log a processing activity\n */\nexport async function logProcessing(args: ProcessingLogEntry): Promise<void> {\n  const {\n    userId,\n    action,\n    lawfulBasis = 'consent',\n    consentVersion = process.env.POLICY_VERSION || '2025-09-28',\n    scopesUsed = [],\n    subjectId,\n    metadata = {},\n  } = args;\n\n  // Redact sensitive information from metadata\n  const redactedMetadata = redactMetadata(metadata);\n\n  const { error } = await supabaseServer\n    .from('processing_logs')\n    .insert({\n      user_id: userId,\n      action,\n      lawful_basis: lawfulBasis,\n      consent_version: consentVersion,\n      scopes_used: scopesUsed,\n      subject_id: subjectId,\n      metadata: redactedMetadata,\n    });\n\n  if (error) {\n    console.error('Failed to log processing activity:', error);\n    // Don't throw - logging failures shouldn't break user flows\n  }\n}\n\n/**\n * Redact sensitive information from metadata\n */\nfunction redactMetadata(metadata: Record<string, any>): Record<string, any> {\n  const redacted = { ...metadata };\n\n  // Redact common sensitive fields\n  const sensitiveFields = ['email', 'phone', 'address', 'name', 'text', 'content', 'body'];\n  \n  for (const [key, value] of Object.entries(redacted)) {\n    if (sensitiveFields.some(field => key.toLowerCase().includes(field))) {\n      if (typeof value === 'string') {\n        redacted[key] = redactSensitive(value);\n      } else if (typeof value === 'object' && value !== null) {\n        redacted[key] = redactMetadata(value);\n      }\n    }\n  }\n\n  return redacted;\n}\n\n/**\n * Get processing logs for a user\n */\nexport async function getUserProcessingLogs(\n  userId: string,\n  limit: number = 100\n): Promise<any[]> {\n  const { data, error } = await supabaseServer\n    .from('processing_logs')\n    .select('*')\n    .eq('user_id', userId)\n    .order('created_at', { ascending: false })\n    .limit(limit);\n\n  if (error) {\n    throw new Error(`Failed to fetch processing logs: ${error.message}`);\n  }\n\n  return data || [];\n}\n\n/**\n * Get processing logs by action type\n */\nexport async function getProcessingLogsByAction(\n  action: string,\n  limit: number = 100\n): Promise<any[]> {\n  const { data, error } = await supabaseServer\n    .from('processing_logs')\n    .select('*')\n    .eq('action', action)\n    .order('created_at', { ascending: false })\n    .limit(limit);\n\n  if (error) {\n    throw new Error(`Failed to fetch processing logs: ${error.message}`);\n  }\n\n  return data || [];\n}\n\n/**\n * Get processing statistics\n */\nexport async function getProcessingStats(\n  userId?: string,\n  days: number = 30\n): Promise<Record<string, number>> {\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n\n  let query = supabaseServer\n    .from('processing_logs')\n    .select('action')\n    .gte('created_at', startDate.toISOString());\n\n  if (userId) {\n    query = query.eq('user_id', userId);\n  }\n\n  const { data, error } = await query;\n\n  if (error) {\n    throw new Error(`Failed to fetch processing stats: ${error.message}`);\n  }\n\n  const stats: Record<string, number> = {};\n  data?.forEach(entry => {\n    stats[entry.action] = (stats[entry.action] || 0) + 1;\n  });\n\n  return stats;\n}\n","/**\n * Crypto Utilities for Envelope Encryption\n * Uses AES-256-GCM for data encryption and key wrapping\n */\n\nimport { createCipher, createDecipher, randomBytes, createHash } from 'crypto';\n\nexport interface EncryptedData {\n  dataKeyEnc: Buffer;\n  iv: Buffer;\n  tag: Buffer;\n  ciphertext: Buffer;\n}\n\n/**\n * Get master key from environment\n */\nexport function getMasterKey(): Buffer {\n  const masterKeyHex = process.env.MASTER_KEY_HEX;\n  if (!masterKeyHex) {\n    throw new Error('MASTER_KEY_HEX environment variable is required');\n  }\n  \n  if (masterKeyHex.length !== 64) {\n    throw new Error('MASTER_KEY_HEX must be 64 hex characters (32 bytes)');\n  }\n  \n  try {\n    return Buffer.from(masterKeyHex, 'hex');\n  } catch (error) {\n    throw new Error('Invalid MASTER_KEY_HEX format');\n  }\n}\n\n/**\n * Generate a random data key\n */\nfunction generateDataKey(): Buffer {\n  return randomBytes(32); // 256 bits\n}\n\n/**\n * Derive a nonce from random IV for key wrapping\n */\nfunction deriveNonce(iv: Buffer): Buffer {\n  return createHash('sha256').update(iv).digest().subarray(0, 12);\n}\n\n/**\n * Encrypt JSON data using envelope encryption\n */\nexport function encryptJSON(obj: any): EncryptedData {\n  const masterKey = getMasterKey();\n  const dataKey = generateDataKey();\n  const iv = randomBytes(16); // 128 bits for AES-GCM\n  const nonce = deriveNonce(iv);\n  \n  // Serialize data\n  const plaintext = JSON.stringify(obj);\n  \n  // Encrypt data with data key\n  const cipher = createCipher('aes-256-gcm', dataKey);\n  cipher.setAAD(iv); // Use IV as additional authenticated data\n  \n  let ciphertext = cipher.update(plaintext, 'utf8');\n  ciphertext = Buffer.concat([ciphertext, cipher.final()]);\n  const tag = cipher.getAuthTag();\n  \n  // Encrypt data key with master key\n  const keyCipher = createCipher('aes-256-gcm', masterKey);\n  keyCipher.setAAD(nonce);\n  \n  let dataKeyEnc = keyCipher.update(dataKey);\n  dataKeyEnc = Buffer.concat([dataKeyEnc, keyCipher.final()]);\n  const keyTag = keyCipher.getAuthTag();\n  \n  // Combine key tag with encrypted data key\n  dataKeyEnc = Buffer.concat([dataKeyEnc, keyTag]);\n  \n  return {\n    dataKeyEnc,\n    iv,\n    tag,\n    ciphertext,\n  };\n}\n\n/**\n * Decrypt JSON data using envelope encryption\n */\nexport function decryptJSON(parts: EncryptedData): any {\n  const masterKey = getMasterKey();\n  const { dataKeyEnc, iv, tag, ciphertext } = parts;\n  const nonce = deriveNonce(iv);\n  \n  // Extract key tag from encrypted data key\n  const keyTag = dataKeyEnc.subarray(-16); // Last 16 bytes\n  const encryptedDataKey = dataKeyEnc.subarray(0, -16);\n  \n  // Decrypt data key with master key\n  const keyDecipher = createDecipher('aes-256-gcm', masterKey);\n  keyDecipher.setAAD(nonce);\n  keyDecipher.setAuthTag(keyTag);\n  \n  let dataKey = keyDecipher.update(encryptedDataKey);\n  dataKey = Buffer.concat([dataKey, keyDecipher.final()]);\n  \n  // Decrypt data with data key\n  const decipher = createDecipher('aes-256-gcm', dataKey);\n  decipher.setAAD(iv);\n  decipher.setAuthTag(tag);\n  \n  let plaintext = decipher.update(ciphertext, undefined, 'utf8');\n  plaintext += decipher.final('utf8');\n  \n  return JSON.parse(plaintext);\n}\n\n/**\n * Convert buffer to hex string\n */\nexport function toHex(buffer: Buffer): string {\n  return buffer.toString('hex');\n}\n\n/**\n * Convert hex string to buffer\n */\nexport function fromHex(hex: string): Buffer {\n  return Buffer.from(hex, 'hex');\n}\n\n/**\n * Safely parse JSON with error handling\n */\nexport function safeParse<T>(json: string, fallback: T): T {\n  try {\n    return JSON.parse(json);\n  } catch (error) {\n    console.warn('Failed to parse JSON, using fallback:', error);\n    return fallback;\n  }\n}\n\n/**\n * Hash sensitive data for logging (one-way)\n */\nexport function hashForLogging(data: string): string {\n  return createHash('sha256').update(data).digest('hex').substring(0, 8);\n}\n\n/**\n * Redact sensitive patterns from text\n */\nexport function redactSensitive(text: string): string {\n  return text\n    .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '[EMAIL_REDACTED]')\n    .replace(/\\b(?:\\+?1[-.\\s]?)?\\(?([0-9]{3})\\)?[-.\\s]?([0-9]{3})[-.\\s]?([0-9]{4})\\b/g, '[PHONE_REDACTED]')\n    .replace(/\\b\\d{4}[-.\\s]?\\d{4}[-.\\s]?\\d{4}[-.\\s]?\\d{4}\\b/g, '[CARD_REDACTED]')\n    .replace(/\\b\\d{3}-\\d{2}-\\d{4}\\b/g, '[SSN_REDACTED]');\n}\n","import { NextRequest, NextResponse } from 'next/server';\nimport { supabaseServer } from '@/lib/supabase-server';\nimport { vaultDeleteUser } from '@/lib/privacy-vault';\nimport { logProcessing } from '@/lib/processing-log';\nimport { z } from 'zod';\n\nconst DeleteRequestSchema = z.object({\n  confirm: z.boolean().refine(val => val === true, {\n    message: 'Confirmation must be true to proceed with deletion',\n  }),\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { confirm } = DeleteRequestSchema.parse(body);\n\n    // For now, use a placeholder user ID (replace with real auth later)\n    const userId = 'placeholder-user-id';\n\n    // Create DSR request record\n    const { data: dsrRequest, error: dsrError } = await supabaseServer\n      .from('dsr_requests')\n      .insert({\n        user_id: userId,\n        type: 'DELETE',\n        status: 'running',\n      })\n      .select()\n      .single();\n\n    if (dsrError) {\n      throw new Error(`Failed to create DSR request: ${dsrError.message}`);\n    }\n\n    try {\n      const deletionSummary = {\n        piiVault: 0,\n        resumes: 0,\n        resumeVersions: 0,\n        jobTargets: 0,\n        comments: 0,\n        batches: 0,\n        batchItems: 0,\n        analytics: 0,\n        tokens: 0,\n        referrals: 0,\n        consents: 0,\n        processingLogs: 0,\n      };\n\n      // Delete PII vault\n      deletionSummary.piiVault = await vaultDeleteUser(userId);\n\n      // Delete resumes and related data\n      const { data: resumes } = await supabaseServer\n        .from('resumes')\n        .select('id')\n        .eq('user_id', userId);\n\n      if (resumes && resumes.length > 0) {\n        const resumeIds = resumes.map(r => r.id);\n\n        // Delete resume versions\n        const { count: versionCount } = await supabaseServer\n          .from('resume_versions')\n          .delete()\n          .in('resume_id', resumeIds);\n        deletionSummary.resumeVersions = versionCount || 0;\n\n        // Delete comments\n        const { count: commentCount } = await supabaseServer\n          .from('resume_comments')\n          .delete()\n          .in('resume_version_id', resumeIds);\n        deletionSummary.comments = commentCount || 0;\n\n        // Delete resumes\n        const { count: resumeCount } = await supabaseServer\n          .from('resumes')\n          .delete()\n          .eq('user_id', userId);\n        deletionSummary.resumes = resumeCount || 0;\n      }\n\n      // Delete job targets\n      const { count: jobTargetCount } = await supabaseServer\n        .from('job_targets')\n        .delete()\n        .eq('user_id', userId);\n      deletionSummary.jobTargets = jobTargetCount || 0;\n\n      // Delete batches and items\n      const { data: batches } = await supabaseServer\n        .from('resume_batches')\n        .select('id')\n        .eq('user_id', userId);\n\n      if (batches && batches.length > 0) {\n        const batchIds = batches.map(b => b.id);\n\n        // Delete batch items\n        const { count: batchItemCount } = await supabaseServer\n          .from('resume_batch_items')\n          .delete()\n          .in('batch_id', batchIds);\n        deletionSummary.batchItems = batchItemCount || 0;\n\n        // Delete batches\n        const { count: batchCount } = await supabaseServer\n          .from('resume_batches')\n          .delete()\n          .eq('user_id', userId);\n        deletionSummary.batches = batchCount || 0;\n      }\n\n      // Delete analytics\n      const { count: analyticsCount } = await supabaseServer\n        .from('resume_events')\n        .delete()\n        .eq('user_id', userId);\n      deletionSummary.analytics = analyticsCount || 0;\n\n      // Delete integration tokens\n      const { count: tokenCount } = await supabaseServer\n        .from('integration_tokens')\n        .delete()\n        .eq('user_id', userId);\n      deletionSummary.tokens = tokenCount || 0;\n\n      // Delete referrals\n      const { count: referralCount } = await supabaseServer\n        .from('referrals')\n        .delete()\n        .eq('user_id', userId);\n      deletionSummary.referrals = referralCount || 0;\n\n      // Delete consents\n      const { count: consentCount } = await supabaseServer\n        .from('consents')\n        .delete()\n        .eq('user_id', userId);\n      deletionSummary.consents = consentCount || 0;\n\n      // Delete processing logs\n      const { count: logCount } = await supabaseServer\n        .from('processing_logs')\n        .delete()\n        .eq('user_id', userId);\n      deletionSummary.processingLogs = logCount || 0;\n\n      // Insert tombstone in processing logs\n      await supabaseServer\n        .from('processing_logs')\n        .insert({\n          user_id: userId,\n          action: 'DELETE',\n          lawful_basis: 'consent',\n          subject_id: userId,\n          metadata: {\n            deletionSummary,\n            timestamp: new Date().toISOString(),\n          },\n        });\n\n      // Update DSR request\n      await supabaseServer\n        .from('dsr_requests')\n        .update({\n          status: 'done',\n          updated_at: new Date().toISOString(),\n        })\n        .eq('id', dsrRequest.id);\n\n      // Log processing activity\n      await logProcessing({\n        userId,\n        action: 'DELETE',\n        lawfulBasis: 'consent',\n        subjectId: dsrRequest.id,\n        metadata: {\n          totalRecordsDeleted: Object.values(deletionSummary).reduce((sum, count) => sum + count, 0),\n          deletionSummary,\n        },\n      });\n\n      return NextResponse.json({\n        success: true,\n        requestId: dsrRequest.id,\n        status: 'done',\n        deletionSummary,\n      });\n    } catch (error) {\n      // Update DSR request with error\n      await supabaseServer\n        .from('dsr_requests')\n        .update({\n          status: 'failed',\n          updated_at: new Date().toISOString(),\n        })\n        .eq('id', dsrRequest.id);\n\n      throw error;\n    }\n  } catch (error) {\n    console.error('Error in DSR delete:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid request data', details: error.errors },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Internal server error during deletion' },\n      { status: 500 }\n    );\n  }\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/dsr/delete/route\",\n        pathname: \"/api/dsr/delete\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/dsr/delete/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/dsr/delete/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","/**\n * Privacy Vault Service\n * Handles encrypted storage and retrieval of PII data\n */\n\nimport { supabaseServer } from './supabase-server';\nimport { encryptJSON, decryptJSON, EncryptedData } from './crypto';\n\nexport interface VaultItem {\n  id: string;\n  kind: string;\n  data: any;\n}\n\n/**\n * Store encrypted data in the PII vault\n */\nexport async function vaultStore(\n  userId: string,\n  kind: string,\n  data: any\n): Promise<string> {\n  const encrypted = encryptJSON(data);\n  \n  const { data: result, error } = await supabaseServer\n    .from('pii_vault')\n    .insert({\n      user_id: userId,\n      kind,\n      data_key_encrypted: encrypted.dataKeyEnc,\n      iv: encrypted.iv,\n      tag: encrypted.tag,\n      ciphertext: encrypted.ciphertext,\n    })\n    .select('id')\n    .single();\n\n  if (error) {\n    throw new Error(`Failed to store in vault: ${error.message}`);\n  }\n\n  return result.id;\n}\n\n/**\n * Fetch and decrypt data from the PII vault\n */\nexport async function vaultFetch(\n  userId: string,\n  kind?: string\n): Promise<VaultItem[]> {\n  let query = supabaseServer\n    .from('pii_vault')\n    .select('id, kind, data_key_encrypted, iv, tag, ciphertext')\n    .eq('user_id', userId);\n\n  if (kind) {\n    query = query.eq('kind', kind);\n  }\n\n  const { data: rows, error } = await query;\n\n  if (error) {\n    throw new Error(`Failed to fetch from vault: ${error.message}`);\n  }\n\n  if (!rows || rows.length === 0) {\n    return [];\n  }\n\n  // Decrypt each item\n  const items: VaultItem[] = [];\n  for (const row of rows) {\n    try {\n      const encrypted: EncryptedData = {\n        dataKeyEnc: row.data_key_encrypted,\n        iv: row.iv,\n        tag: row.tag,\n        ciphertext: row.ciphertext,\n      };\n\n      const data = decryptJSON(encrypted);\n      items.push({\n        id: row.id,\n        kind: row.kind,\n        data,\n      });\n    } catch (decryptError) {\n      console.error(`Failed to decrypt vault item ${row.id}:`, decryptError);\n      // Continue with other items\n    }\n  }\n\n  return items;\n}\n\n/**\n * Delete a specific item from the vault\n */\nexport async function vaultDeleteItem(itemId: string): Promise<void> {\n  const { error } = await supabaseServer\n    .from('pii_vault')\n    .delete()\n    .eq('id', itemId);\n\n  if (error) {\n    throw new Error(`Failed to delete vault item: ${error.message}`);\n  }\n}\n\n/**\n * Delete all vault data for a user\n */\nexport async function vaultDeleteUser(userId: string): Promise<number> {\n  const { data, error } = await supabaseServer\n    .from('pii_vault')\n    .delete()\n    .eq('user_id', userId)\n    .select('id');\n\n  if (error) {\n    throw new Error(`Failed to delete user vault: ${error.message}`);\n  }\n\n  return data?.length || 0;\n}\n\n/**\n * Update encrypted data in the vault\n */\nexport async function vaultUpdate(\n  itemId: string,\n  data: any\n): Promise<void> {\n  const encrypted = encryptJSON(data);\n  \n  const { error } = await supabaseServer\n    .from('pii_vault')\n    .update({\n      data_key_encrypted: encrypted.dataKeyEnc,\n      iv: encrypted.iv,\n      tag: encrypted.tag,\n      ciphertext: encrypted.ciphertext,\n      updated_at: new Date().toISOString(),\n    })\n    .eq('id', itemId);\n\n  if (error) {\n    throw new Error(`Failed to update vault item: ${error.message}`);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[3]}