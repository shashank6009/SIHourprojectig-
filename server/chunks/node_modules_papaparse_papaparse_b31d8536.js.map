{"version":3,"sources":["turbopack:///[project]/node_modules/papaparse/papaparse.js"],"sourcesContent":["/* @license\nPapa Parse\nv5.5.3\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n\t// in strict mode we cannot access arguments.callee, so we need a named reference to\n\t// stringify the factory method for the blob worker\n\t// eslint-disable-next-line func-name\n}(this, function moduleFactory()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tfunction getWorkerBlob() {\n\t\tvar URL = global.URL || global.webkitURL || null;\n\t\tvar code = moduleFactory.toString();\n\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \", '(', code, ')();'], {type: 'text/javascript'})));\n\t}\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = global.IS_PAPA_WORKER || false;\n\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\t}\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\t_input = stripBom(_input);\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\n\t\t// Strip character from UTF-8 BOM encoded files that cause issue parsing the file\n\t\tfunction stripBom(string) {\n\t\t\tif (string.charCodeAt(0) === 0xfeff) {\n\t\t\t\treturn string.slice(1);\n\t\t\t}\n\t\t\treturn string;\n\t\t}\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\n\t\tvar _escapedQuote = _quoteChar + _quoteChar;\n\n\t\t/** whether to skip empty lines */\n\t\tvar _skipEmptyLines = false;\n\n\t\t/** the columns (keys) we expect when we unparse objects */\n\t\tvar _columns = null;\n\n\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\n\t\tvar _escapeFormulae = false;\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (Array.isArray(_input))\n\t\t{\n\t\t\tif (!_input.length || Array.isArray(_input[0]))\n\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(_columns || Object.keys(_input[0]), _input, _skipEmptyLines);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (Array.isArray(_input.data))\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields = _input.meta && _input.meta.fields || _columns;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: typeof _input.data[0] === 'object'\n\t\t\t\t\t\t\t? Object.keys(_input.data[0])\n\t\t\t\t\t\t\t: [];\n\n\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow new Error('Unable to serialize unrecognized input');\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| typeof _config.quotes === 'function'\n\t\t\t\t|| Array.isArray(_config.quotes))\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\n\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\n\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\n\t\t\tif (Array.isArray(_config.columns)) {\n\n\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\n\n\t\t\t\t_columns = _config.columns;\n\t\t\t}\n\n\t\t\tif (_config.escapeChar !== undefined) {\n\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\n\t\t\t}\n\n\t\t\tif (_config.escapeFormulae instanceof RegExp) {\n\t\t\t\t_escapeFormulae = _config.escapeFormulae;\n\t\t\t} else if (typeof _config.escapeFormulae === 'boolean' && _config.escapeFormulae) {\n\t\t\t\t_escapeFormulae =  /^[=+\\-@\\t\\r].*$/;\n\t\t\t}\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data, skipEmptyLines)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tvar emptyLine = false;\n\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\n\t\t\t\tif (skipEmptyLines && !hasHeader)\n\t\t\t\t{\n\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\n\t\t\t\t}\n\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\n\t\t\t\t\tvar line = [];\n\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\n\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\n\t\t\t\t\t\tline.push(data[row][cx]);\n\t\t\t\t\t}\n\t\t\t\t\temptyLine = line.join('').trim() === '';\n\t\t\t\t}\n\t\t\t\tif (!emptyLine)\n\t\t\t\t{\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (col > 0 && !nullLine)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t\t}\n\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\n\t\t\t\t\t{\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tvar needsQuotes = false;\n\n\t\t\tif (_escapeFormulae && typeof str === \"string\" && _escapeFormulae.test(str)) {\n\t\t\t\tstr = \"'\" + str;\n\t\t\t\tneedsQuotes = true;\n\t\t\t}\n\n\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\n\n\t\t\tneedsQuotes = needsQuotes\n\t\t\t\t\t\t\t|| _quotes === true\n\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\n\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._halted = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tconst skipFirstNLines = parseInt(this._config.skipFirstNLines) || 0;\n\t\t\tif (this.isFirstChunk && skipFirstNLines > 0) {\n\t\t\t\tlet _newline = this._config.newline;\n\t\t\t\tif (!_newline) {\n\t\t\t\t\tconst quoteChar = this._config.quoteChar || '\"';\n\t\t\t\t\t_newline = this._handle.guessLineEndings(chunk, quoteChar);\n\t\t\t\t}\n\t\t\t\tconst splitChunk = chunk.split(_newline);\n\t\t\t\tchunk = [...splitChunk.slice(skipFirstNLines)].join(_newline);\n\t\t\t}\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\t\t\tthis._halted = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\tthis._halted = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\t\tthis._halted = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send(this._config.downloadRequestBody);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\n\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk;\n\t\t\tif(size) {\n\t\t\t\tchunk = remaining.substring(0, size);\n\t\t\t\tremaining = remaining.substring(size);\n\t\t\t} else {\n\t\t\t\tchunk = remaining;\n\t\t\t\tremaining = '';\n\t\t\t}\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tif (!stream.push(data) && !this._handle.paused()) {\n\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t// so we need to pause until more items\n\t\t\t\t// can be processed\n\t\t\t\tthis._handle.pause();\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\t}\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar MAX_FLOAT = Math.pow(2, 53);\n\t\tvar MIN_FLOAT = -MAX_FLOAT;\n\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/;\n\t\tvar ISO_DATE = /^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/;\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse {\n\t\t\t\t\t\t_results.data = _results.data[0];\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = this.guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\n\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\n\t\t\t// otherwise we can get duplicate content within a row\n\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tif(self.streamer._halted) {\n\t\t\t\t_paused = false;\n\t\t\t\tself.streamer.parseChunk(_input, true);\n\t\t\t} else {\n\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\n\t\t\t\t// wait for it to halt in order to resume\n\t\t\t\tsetTimeout(self.resume, 3);\n\t\t\t}\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tthis.guessLineEndings = function(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction testFloat(s) {\n\t\t\tif (FLOAT.test(s)) {\n\t\t\t\tvar floatValue = parseFloat(s);\n\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\t_results.data = _results.data.filter(function(d) {\n\t\t\t\t\treturn !testEmptyLine(d);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\n\t\t\tfunction addHeader(header, i)\n\t\t\t{\n\t\t\t\tif (isFunction(_config.transformHeader))\n\t\t\t\t\theader = _config.transformHeader(header, i);\n\n\t\t\t\t_fields.push(header);\n\t\t\t}\n\n\t\t\tif (Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\t\t_results.data[i].forEach(addHeader);\n\n\t\t\t\t_results.data.splice(0, 1);\n\t\t\t}\n\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\n\t\t\telse\n\t\t\t\t_results.data.forEach(addHeader);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (testFloat(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfunction processRow(rowSource, i)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < rowSource.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = rowSource[j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\n\t\t\tvar incrementBy = 1;\n\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\t_results.data = _results.data.map(processRow);\n\t\t\t\tincrementBy = _results.data.length;\n\t\t\t}\n\t\t\telse\n\t\t\t\t_results.data = processRow(_results.data, 0);\n\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += incrementBy;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\n\n\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\n\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\n\t\t\t\tvar delim = delimitersToGuess[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 0) {\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\n\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t\tmaxFieldCount = avgFieldCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\tvar error = {\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg\n\t\t\t};\n\t\t\tif(row !== undefined) {\n\t\t\t\terror.row = row;\n\t\t\t}\n\t\t\t_results.errors.push(error);\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\tvar renamedHeaders = null;\n\t\tvar headerParsed = false;\n\n\t\tif (config.quoteChar === undefined || config.quoteChar === null) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow new Error('Comment character same as delimiter');\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow new Error('Input must be a string');\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\n\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndDelimiter, delimLen) === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\n\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t// we look for next delimiter char\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substring(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\tif (config.header && !baseIndex && data.length && !headerParsed)\n\t\t\t\t{\n\t\t\t\t\tconst result = data[0];\n\t\t\t\t\tconst headerCount = Object.create(null); // To track the count of each base header\n\t\t\t\t\tconst usedHeaders = new Set(result); // To track used headers and avoid duplicates\n\t\t\t\t\tlet duplicateHeaders = false;\n\n\t\t\t\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\t\t\t\tlet header = result[i];\n\t\t\t\t\t\tif (isFunction(config.transformHeader))\n\t\t\t\t\t\t\theader = config.transformHeader(header, i);\n\n\t\t\t\t\t\tif (!headerCount[header]) {\n\t\t\t\t\t\t\theaderCount[header] = 1;\n\t\t\t\t\t\t\tresult[i] = header;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet newHeader;\n\t\t\t\t\t\t\tlet suffixCount = headerCount[header];\n\n\t\t\t\t\t\t\t// Find a unique new header\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tnewHeader = `${header}_${suffixCount}`;\n\t\t\t\t\t\t\t\tsuffixCount++;\n\t\t\t\t\t\t\t} while (usedHeaders.has(newHeader));\n\n\t\t\t\t\t\t\tusedHeaders.add(newHeader); // Mark this new Header as used\n\t\t\t\t\t\t\tresult[i] = newHeader;\n\t\t\t\t\t\t\theaderCount[header]++;\n\t\t\t\t\t\t\tduplicateHeaders = true;\n\t\t\t\t\t\t\tif (renamedHeaders === null) {\n\t\t\t\t\t\t\t\trenamedHeaders = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trenamedHeaders[newHeader] = header;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tusedHeaders.add(header); // Ensure the original header is marked as used\n\t\t\t\t\t}\n\t\t\t\t\tif (duplicateHeaders) {\n\t\t\t\t\t\tconsole.warn('Duplicate headers found and renamed.');\n\t\t\t\t\t}\n\t\t\t\t\theaderParsed = true;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0),\n\t\t\t\t\t\trenamedHeaders: renamedHeaders\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\n\t\tvar workerUrl = getWorkerBlob();\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: msg.results.data[i],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow new Error('Not implemented.');\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = Array.isArray(obj) ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n"],"names":[],"mappings":"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","ignoreList":[0]}