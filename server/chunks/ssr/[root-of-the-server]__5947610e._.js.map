{"version":3,"sources":["turbopack:///[project]/src/components/RecommendationsDebug.tsx","turbopack:///[project]/src/api/recommendations.ts","turbopack:///[project]/src/app/api-demo/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { healthCheck, getRecommendations, HealthCheckResponse, RecommendationsResponse } from '../api/recommendations';\n\nconst RecommendationsDebug: React.FC = () => {\n  const [studentId, setStudentId] = useState<string>('student_123');\n  const [topN, setTopN] = useState<number>(5);\n  const [healthResult, setHealthResult] = useState<HealthCheckResponse | null>(null);\n  const [recommendationsResult, setRecommendationsResult] = useState<RecommendationsResponse | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleHealthCheck = async () => {\n    setLoading(true);\n    setError(null);\n    setHealthResult(null);\n\n    try {\n      const result = await healthCheck();\n      setHealthResult(result);\n      console.log('Health check result:', result);\n    } catch (err: unknown) {\n      const errorMessage = (err as Error).message || 'Health check failed';\n      setError(errorMessage);\n      console.error('Health check error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGetRecommendations = async () => {\n    if (!studentId.trim()) {\n      setError('Please enter a student ID');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    setRecommendationsResult(null);\n\n    try {\n      const result = await getRecommendations(studentId.trim(), topN);\n      setRecommendationsResult(result);\n      console.log('Recommendations result:', result);\n    } catch (err: unknown) {\n      const errorMessage = (err as Error).message || 'Failed to fetch recommendations';\n      setError(errorMessage);\n      console.error('Recommendations error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\n      <h2 className=\"text-2xl font-bold mb-6 text-gray-800\">ML API Debug Tool</h2>\n      \n      {/* Input Controls */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n        <div>\n          <label htmlFor=\"studentId\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Student ID\n          </label>\n          <input\n            id=\"studentId\"\n            type=\"text\"\n            value={studentId}\n            onChange={(e) => setStudentId(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter student ID\"\n          />\n        </div>\n        \n        <div>\n          <label htmlFor=\"topN\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Top N Recommendations\n          </label>\n          <input\n            id=\"topN\"\n            type=\"number\"\n            value={topN}\n            onChange={(e) => setTopN(parseInt(e.target.value) || 5)}\n            min=\"1\"\n            max=\"20\"\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-4 mb-6\">\n        <button\n          onClick={handleHealthCheck}\n          disabled={loading}\n          className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n        >\n          {loading ? 'Pinging...' : 'Ping API'}\n        </button>\n        \n        <button\n          onClick={handleGetRecommendations}\n          disabled={loading || !studentId.trim()}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n        >\n          {loading ? 'Fetching...' : 'Fetch Recommendations'}\n        </button>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-md\">\n          <h3 className=\"text-red-800 font-medium mb-2\">Error:</h3>\n          <p className=\"text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {/* Health Check Results */}\n      {healthResult && (\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">Health Check Result:</h3>\n          <pre className=\"bg-gray-100 p-4 rounded-md overflow-auto text-sm\">\n            {JSON.stringify(healthResult, null, 2)}\n          </pre>\n        </div>\n      )}\n\n      {/* Recommendations Results */}\n      {recommendationsResult && (\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">Recommendations Result:</h3>\n          <div className=\"mb-4 p-3 bg-blue-50 rounded-md\">\n            <p><strong>Student ID:</strong> {recommendationsResult.student_id}</p>\n            <p><strong>Total Recommendations:</strong> {recommendationsResult.total_recommendations}</p>\n            <p><strong>Requested Count:</strong> {recommendationsResult.requested_count}</p>\n            <p><strong>Returned Count:</strong> {recommendationsResult.recommendations.length}</p>\n          </div>\n          <pre className=\"bg-gray-100 p-4 rounded-md overflow-auto text-sm max-h-96\">\n            {JSON.stringify(recommendationsResult, null, 2)}\n          </pre>\n        </div>\n      )}\n\n      {/* API Info */}\n      <div className=\"mt-8 p-4 bg-gray-50 rounded-md\">\n        <h3 className=\"text-sm font-medium text-gray-700 mb-2\">API Endpoint:</h3>\n        <code className=\"text-sm text-gray-600\">https://5449eed1f56c.ngrok-free.app</code>\n      </div>\n    </div>\n  );\n};\n\nexport default RecommendationsDebug;\n","import apiClient from './client';\n\n// Type definitions\nexport interface HealthCheckResponse {\n  status: string;\n}\n\nexport interface RecommendationScores {\n  success_probability: number;\n  skill_match?: number;\n  employability_boost?: number;\n  fairness_adjustment?: number;\n}\n\nexport interface CourseSuggestion {\n  skill: string;\n  platform: string;\n  course_name: string;\n  link: string;\n}\n\nexport interface Recommendation {\n  internship_id: string;\n  title: string;\n  organization_name: string;\n  domain: string;\n  location: string;\n  duration: string;\n  stipend: string | number;\n  rank: number;\n  scores: RecommendationScores;\n  explain_reasons?: string[];\n  course_suggestions?: CourseSuggestion[];\n}\n\nexport interface RecommendationsResponse {\n  student_id: string;\n  total_recommendations: number;\n  requested_count: number;\n  recommendations: Recommendation[];\n}\n\n// Utility function to safely convert string to number\nconst safeParseNumber = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') {\n    const parsed = parseFloat(value);\n    return isNaN(parsed) ? 0 : parsed;\n  }\n  return 0;\n};\n\n// Utility function to process recommendations and convert numeric strings\nconst processRecommendations = (recommendations: Record<string, unknown>[]): Recommendation[] => {\n  return recommendations.map((rec) => ({\n    internship_id: rec.internship_id as string,\n    title: rec.title as string,\n    organization_name: rec.organization_name as string,\n    domain: rec.domain as string,\n    location: rec.location as string,\n    duration: rec.duration as string,\n    stipend: safeParseNumber(rec.stipend),\n    rank: safeParseNumber(rec.rank),\n    scores: {\n      success_probability: safeParseNumber((rec.scores as Record<string, unknown>)?.success_probability),\n      skill_match: (rec.scores as Record<string, unknown>)?.skill_match ? safeParseNumber((rec.scores as Record<string, unknown>).skill_match) : undefined,\n      employability_boost: (rec.scores as Record<string, unknown>)?.employability_boost ? safeParseNumber((rec.scores as Record<string, unknown>).employability_boost) : undefined,\n      fairness_adjustment: (rec.scores as Record<string, unknown>)?.fairness_adjustment ? safeParseNumber((rec.scores as Record<string, unknown>).fairness_adjustment) : undefined,\n    },\n  }));\n};\n\n// Health check function\nexport const healthCheck = async (): Promise<HealthCheckResponse> => {\n  try {\n    const response = await apiClient.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('Health check failed:', error);\n    throw error;\n  }\n};\n\n// Get recommendations function\nexport const getRecommendations = async (\n  studentId: string,\n  topN: number = 5\n): Promise<RecommendationsResponse> => {\n  try {\n    const response = await apiClient.get(`/recommendations/${studentId}`, {\n      params: { top_n: topN }\n    });\n\n    const data = response.data;\n    \n    // Process the response to convert numeric strings\n    const processedData: RecommendationsResponse = {\n      student_id: data.student_id,\n      total_recommendations: safeParseNumber(data.total_recommendations),\n      requested_count: safeParseNumber(data.requested_count),\n      recommendations: processRecommendations(data.recommendations || []),\n    };\n\n    return processedData;\n  } catch (error) {\n    console.error('Get recommendations failed:', error);\n    throw error;\n  }\n};\n\n// Additional utility function to get success probability for a specific internship\nexport const getSuccessProbability = async (\n  studentId: string,\n  internshipId: string\n): Promise<{ success_probability: number }> => {\n  try {\n    const response = await apiClient.get(`/success/${studentId}/${internshipId}`);\n    return {\n      success_probability: safeParseNumber(response.data.success_probability),\n    };\n  } catch (error) {\n    console.error('Get success probability failed:', error);\n    throw error;\n  }\n};\n","'use client';\n\nimport RecommendationsDebug from '@/components/RecommendationsDebug';\n\nexport default function ApiDemoPage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"container mx-auto px-4\">\n        <RecommendationsDebug />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}