{"version":3,"sources":["turbopack:///[project]/src/lib/http.ts","turbopack:///[project]/src/components/copilot/CommentSidebar.tsx","turbopack:///[project]/src/app/copilot/review/page.tsx"],"sourcesContent":["// TODO: Phase 2 - Add retry logic, error handling, and request/response interceptors\n\nexport interface HttpOptions {\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE';\n  headers?: Record<string, string>;\n  body?: any;\n}\n\nexport async function httpRequest<T>(\n  url: string,\n  options: HttpOptions = {}\n): Promise<T> {\n  const { method = 'GET', headers = {}, body } = options;\n\n  const config: RequestInit = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n  };\n\n  if (body && method !== 'GET') {\n    config.body = JSON.stringify(body);\n  }\n\n  const response = await fetch(url, config);\n\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\nexport const http = {\n  get: <T>(url: string, headers?: Record<string, string>) =>\n    httpRequest<T>(url, { method: 'GET', headers }),\n  \n  post: <T>(url: string, body: any, headers?: Record<string, string>) =>\n    httpRequest<T>(url, { method: 'POST', headers, body }),\n  \n  put: <T>(url: string, body: any, headers?: Record<string, string>) =>\n    httpRequest<T>(url, { method: 'PUT', headers, body }),\n  \n  delete: <T>(url: string, headers?: Record<string, string>) =>\n    httpRequest<T>(url, { method: 'DELETE', headers }),\n};\n","'use client';\n\nimport { useState, useEffect } from 'react';\nimport { http } from '@/lib/http';\nimport { ResumeComment } from '@/types/resume';\n\ninterface CommentSidebarProps {\n  versionId: string;\n  isMentorMode?: boolean;\n}\n\nexport default function CommentSidebar({ versionId, isMentorMode = false }: CommentSidebarProps) {\n  const [comments, setComments] = useState<ResumeComment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  const [newAuthor, setNewAuthor] = useState(isMentorMode ? 'Mentor' : '');\n  const [newBlockId, setNewBlockId] = useState('');\n  const [newLineRef, setNewLineRef] = useState<number | undefined>();\n\n  useEffect(() => {\n    fetchComments();\n  }, [versionId]);\n\n  const fetchComments = async () => {\n    try {\n      const response = await http.get(`/api/feedback/comment?resumeVersionId=${versionId}`);\n      setComments(response.data.comments || []);\n    } catch (error) {\n      console.error('Failed to fetch comments:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addComment = async () => {\n    if (!newComment.trim() || !newAuthor.trim()) return;\n\n    try {\n      await http.post('/api/feedback/comment', {\n        resumeVersionId: versionId,\n        blockId: newBlockId || undefined,\n        lineRef: newLineRef,\n        author: newAuthor,\n        text: newComment,\n      });\n\n      setNewComment('');\n      setNewBlockId('');\n      setNewLineRef(undefined);\n      fetchComments();\n    } catch (error) {\n      console.error('Failed to add comment:', error);\n    }\n  };\n\n  const toggleResolved = async (commentId: string, resolved: boolean) => {\n    try {\n      await http.patch('/api/feedback/comment', {\n        id: commentId,\n        resolved,\n      });\n      fetchComments();\n    } catch (error) {\n      console.error('Failed to update comment:', error);\n    }\n  };\n\n  // Group comments by blockId\n  const groupedComments = comments.reduce((acc, comment) => {\n    const key = comment.blockId || 'general';\n    if (!acc[key]) acc[key] = [];\n    acc[key].push(comment);\n    return acc;\n  }, {} as Record<string, ResumeComment[]>);\n\n  if (loading) {\n    return (\n      <div className=\"w-80 bg-gray-50 p-4 border-l\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n          <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n          <div className=\"h-4 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-80 bg-gray-50 p-4 border-l max-h-screen overflow-y-auto\">\n      <h3 className=\"text-lg font-semibold mb-4\">Comments & Feedback</h3>\n      \n      {/* Add new comment form */}\n      <div className=\"mb-6 p-4 bg-white rounded-lg border\">\n        <h4 className=\"font-medium mb-3\">Add Comment</h4>\n        \n        <div className=\"space-y-3\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Author\n            </label>\n            <input\n              type=\"text\"\n              value={newAuthor}\n              onChange={(e) => setNewAuthor(e.target.value)}\n              placeholder=\"Your name\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Block ID (optional)\n            </label>\n            <input\n              type=\"text\"\n              value={newBlockId}\n              onChange={(e) => setNewBlockId(e.target.value)}\n              placeholder=\"block-1\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Line Reference (optional)\n            </label>\n            <input\n              type=\"number\"\n              value={newLineRef || ''}\n              onChange={(e) => setNewLineRef(e.target.value ? parseInt(e.target.value) : undefined)}\n              placeholder=\"1\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Comment\n            </label>\n            <textarea\n              value={newComment}\n              onChange={(e) => setNewComment(e.target.value)}\n              placeholder=\"Add your feedback...\"\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          \n          <button\n            onClick={addComment}\n            disabled={!newComment.trim() || !newAuthor.trim()}\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            Add Comment\n          </button>\n        </div>\n      </div>\n\n      {/* Comments list */}\n      <div className=\"space-y-4\">\n        {Object.entries(groupedComments).map(([blockId, blockComments]) => (\n          <div key={blockId} className=\"bg-white rounded-lg border p-3\">\n            <h4 className=\"font-medium text-sm text-gray-600 mb-2\">\n              {blockId === 'general' ? 'General Comments' : `Block: ${blockId}`}\n            </h4>\n            \n            <div className=\"space-y-3\">\n              {blockComments.map((comment) => (\n                <div\n                  key={comment.id}\n                  className={`p-3 rounded-md border-l-4 ${\n                    comment.resolved \n                      ? 'bg-green-50 border-green-200' \n                      : 'bg-yellow-50 border-yellow-200'\n                  }`}\n                >\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div className=\"text-sm\">\n                      <span className=\"font-medium text-gray-800\">{comment.author}</span>\n                      <span className=\"text-gray-500 ml-2\">\n                        {new Date(comment.createdAt).toLocaleDateString()}\n                      </span>\n                      {comment.lineRef && (\n                        <span className=\"text-gray-500 ml-2\">Line {comment.lineRef}</span>\n                      )}\n                    </div>\n                    <button\n                      onClick={() => toggleResolved(comment.id, !comment.resolved)}\n                      className={`text-xs px-2 py-1 rounded ${\n                        comment.resolved\n                          ? 'bg-green-100 text-green-800'\n                          : 'bg-yellow-100 text-yellow-800'\n                      }`}\n                    >\n                      {comment.resolved ? 'Resolved' : 'Mark Resolved'}\n                    </button>\n                  </div>\n                  \n                  <p className=\"text-sm text-gray-700\">{comment.text}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        \n        {comments.length === 0 && (\n          <div className=\"text-center text-gray-500 py-8\">\n            <p>No comments yet.</p>\n            <p className=\"text-sm\">Add the first comment above.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport { http } from '@/lib/http';\nimport CommentSidebar from '@/components/copilot/CommentSidebar';\n\nfunction MentorReviewContent() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [version, setVersion] = useState<any>(null);\n  const [versionId, setVersionId] = useState<string | null>(null);\n  const searchParams = useSearchParams();\n\n  useEffect(() => {\n    const token = searchParams.get('token');\n    if (!token) {\n      setError('No review token provided');\n      setLoading(false);\n      return;\n    }\n\n    verifyToken(token);\n  }, [searchParams]);\n\n  const verifyToken = async (token: string) => {\n    try {\n      const response = await http.get(`/api/feedback/share?token=${token}`);\n      setVersion(response.data.version);\n      setVersionId(response.data.version.id);\n    } catch (error: any) {\n      console.error('Token verification failed:', error);\n      setError(error.message || 'Invalid or expired review link');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Verifying review link...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto p-6\">\n          <div className=\"text-red-500 text-6xl mb-4\">⚠️</div>\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Review Link Expired</h1>\n          <p className=\"text-gray-600 mb-4\">\n            {error}\n          </p>\n          <p className=\"text-sm text-gray-500\">\n            Please request a new review link from the resume owner.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!version) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600\">Loading resume...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-xl font-semibold text-gray-900\">Mentor Review Mode</h1>\n              <p className=\"text-sm text-gray-600\">\n                Reviewing: {version.label} • Created: {new Date(version.created_at).toLocaleDateString()}\n              </p>\n            </div>\n            <div className=\"text-sm text-gray-500\">\n              Read-only access\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"flex\">\n          {/* Resume Content */}\n          <div className=\"flex-1 bg-white rounded-lg shadow-md p-6 mr-6\">\n            <h2 className=\"text-lg font-semibold mb-4\">Resume Content</h2>\n            \n            <div className=\"space-y-6\">\n              {version.content?.blocks?.map((block: any, index: number) => (\n                <div key={index} className=\"border rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-gray-800 mb-3 capitalize\">\n                    {block.type} - {block.title}\n                  </h3>\n                  \n                  {block.description && (\n                    <p className=\"text-sm text-gray-600 mb-3 italic\">\n                      {block.description}\n                    </p>\n                  )}\n                  \n                  <div className=\"space-y-2\">\n                    {block.details?.map((detail: string, detailIndex: number) => (\n                      <div key={detailIndex} className=\"flex items-start space-x-2\">\n                        <span className=\"text-gray-400 mt-1\">•</span>\n                        <span className=\"text-sm text-gray-700\">{detail}</span>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  {(block.startDate || block.endDate) && (\n                    <div className=\"mt-3 text-xs text-gray-500\">\n                      {block.startDate && <span>From: {block.startDate}</span>}\n                      {block.startDate && block.endDate && <span> • </span>}\n                      {block.endDate && <span>To: {block.endDate}</span>}\n                    </div>\n                  )}\n                </div>\n              ))}\n              \n              {version.content?.tailoredContent && (\n                <div className=\"border-t pt-6\">\n                  <h3 className=\"font-semibold text-gray-800 mb-3\">Tailored Content</h3>\n                  <div className=\"bg-blue-50 rounded-lg p-4\">\n                    <p className=\"text-sm text-blue-800\">\n                      <strong>ATS Score:</strong> {version.content.tailoredContent.atsScore}%\n                    </p>\n                    {version.content.tailoredContent.gapSuggestions?.length > 0 && (\n                      <div className=\"mt-3\">\n                        <p className=\"text-sm font-medium text-blue-800 mb-2\">Gap Suggestions:</p>\n                        <ul className=\"text-sm text-blue-700 space-y-1\">\n                          {version.content.tailoredContent.gapSuggestions.map((suggestion: string, index: number) => (\n                            <li key={index}>• {suggestion}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Comments Sidebar */}\n          {versionId && (\n            <CommentSidebar versionId={versionId} isMentorMode={true} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function MentorReviewPage() {\n  return (\n    <Suspense fallback={\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading review page...</p>\n        </div>\n      </div>\n    }>\n      <MentorReviewContent />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":"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"}